"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[414],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=i,h=p["".concat(s,".").concat(m)]||p[m]||f[m]||a;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3619:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={},o="Refresh/Invalidate cache",c={unversionedId:"configurations/event-management/refresh-cache",id:"configurations/event-management/refresh-cache",title:"Refresh/Invalidate cache",description:"Event management implementation provides the ability to configure when to invalidate register cache after form submission.",source:"@site/docs/configurations/event-management/refresh-cache.mdx",sourceDirName:"configurations/event-management",slug:"/configurations/event-management/refresh-cache",permalink:"/configurations/event-management/refresh-cache",draft:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/docs/configurations/event-management/refresh-cache.mdx",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Configurations",permalink:"/configurations/"},next:{title:"Resource closure using configured questionnaires",permalink:"/configurations/event-management/resource-closure"}},s={},l=[{value:"Sample questionnaire with <code>refreshContent</code>",id:"sample-questionnaire-with-refreshcontent",level:2}],u={toc:l};function f(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"refreshinvalidate-cache"},"Refresh/Invalidate cache"),(0,i.kt)("p",null,"Event management implementation provides the ability to configure when to invalidate register cache after form submission."),(0,i.kt)("p",null,"Since we currently cache the register data, we need to refresh/invalidate the cache every time a patient or family is removed from the app. This is to make sure the UI shows the correct data at all times."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"refreshContent")," field in the ",(0,i.kt)("inlineCode",{parentName:"p"},"questionnaireConfig")," determines whether the register cache should be invalidated when a form is submitted."),(0,i.kt)("h2",{id:"sample-questionnaire-with-refreshcontent"},"Sample questionnaire with ",(0,i.kt)("inlineCode",{parentName:"h2"},"refreshContent")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'       {\n         "title": "Pregnancy Outcome",\n         "titleColor": "@{patientTextColor}",\n         "visible": "@{isPregnant}",\n         "enabled": "@{patientActive}",\n         "actions": [\n           {\n             "trigger": "ON_CLICK",\n             "workflow": "LAUNCH_QUESTIONNAIRE",\n             "questionnaire": {\n               "id": "questionnaire-uuid",\n               "title": "Pregnancy outcome",\n               "resourceIdentifier": "@{patientId}",\n               "planDefinitions": [\n                 "planDefinitions-uuid"\n               ],\n               "refreshContent" : true\n             }\n           }\n         ]\n       }\n')))}f.isMDXComponent=!0}}]);