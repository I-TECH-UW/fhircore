"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[438],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),h=p(n),u=i,m=h["".concat(s,".").concat(u)]||h[u]||d[u]||a;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5393:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={},l="CQL",o={unversionedId:"engineering/android-app/writing-fhir/cql/cql",id:"engineering/android-app/writing-fhir/cql/cql",title:"CQL",description:"This Documentation on CQL is to give some insights on",source:"@site/docs/engineering/android-app/writing-fhir/cql/cql.mdx",sourceDirName:"engineering/android-app/writing-fhir/cql",slug:"/engineering/android-app/writing-fhir/cql/",permalink:"/engineering/android-app/writing-fhir/cql/",draft:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/docs/engineering/android-app/writing-fhir/cql/cql.mdx",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Sentry setup",permalink:"/engineering/android-app/developer-setup/sentry"},next:{title:"Converting CQL to a library",permalink:"/engineering/android-app/writing-fhir/cql/convert-cql-to-library"}},s={},p=[{value:"What is CQL",id:"what-is-cql",level:2},{value:"CQL Logic/Decision Library",id:"cql-logicdecision-library",level:2},{value:"Common challenges with CQL",id:"common-challenges-with-cql",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"cql"},"CQL"),(0,i.kt)("p",null,"This Documentation on CQL is to give some insights on"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"How to author the CQL script"),(0,i.kt)("li",{parentName:"ol"},"How to load and execute CQL scripts"),(0,i.kt)("li",{parentName:"ol"},"Some sample use cases where we have used CQL")),(0,i.kt)("h2",{id:"what-is-cql"},"What is CQL"),(0,i.kt)("p",null,"CQL\xad is a Health Level Seven International\xae (HL7\xae) authoring language standard that\u2019s intended to be human readable. It is part of the effort to harmonize standards used for electronic clinical quality measures (eCQMs) and clinical decision support (CDS)."),(0,i.kt)("p",null,"CQL provides the ability to express logic that is human readable yet structured enough for processing a query electronically. CQL is the expression logic used in Health Quality Measure Format (HQMF) beginning with the eCQMs implemented in calendar year 2019."),(0,i.kt)("p",null,"CQL replaces the logic expressions previously defined in the Quality Data Model (QDM). Beginning with v5.3, QDM includes only the conceptual model for defining the data elements (the data model). Measure authors with access to the Measure Authoring Tool (MAT) can use the tool to author measures using CQL\xad. Visit the MAT webpage for more information."),(0,i.kt)("p",null,"CQL allows for a more modular, flexible, and robust expression of the logic. It allows logic to be shared between measures and with clinical decision support."),(0,i.kt)("h2",{id:"cql-logicdecision-library"},"CQL Logic/Decision Library"),(0,i.kt)("p",null,"The Clinical Quality Language (",(0,i.kt)("inlineCode",{parentName:"p"},"CQL"),") Specification provides a way to define, data querying, processing and logical expressions in a simplified and user-friendly way. ",(0,i.kt)("a",{parentName:"p",href:"https://cql.hl7.org/01-introduction.html"},"Here")," is a detailed guide on ",(0,i.kt)("inlineCode",{parentName:"p"},"CQL"),". Some example ",(0,i.kt)("inlineCode",{parentName:"p"},"CQL")," scripts can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/opensrp/fhir-resources/tree/main/ecbis/measure_cql"},"here"),"."),(0,i.kt)("p",null,"Since ",(0,i.kt)("inlineCode",{parentName:"p"},"CQL")," itself is a user-friendly script rather than a parseable configuration or program, it needs a ",(0,i.kt)("inlineCode",{parentName:"p"},"JSON")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"XML")," form that can be lexically parsed and understood by the parser.For this it is needs to be transformed into a JSON form called Expression Logical Model(ELM) aka ",(0,i.kt)("inlineCode",{parentName:"p"},"json+elm"),". An XML form ",(0,i.kt)("inlineCode",{parentName:"p"},"xml+elm")," can also used. In most cases, we shall be using ",(0,i.kt)("inlineCode",{parentName:"p"},"json+elm")," for parsing FHIR Core Decision or Reporting Logic."),(0,i.kt)("p",null,"The translated ",(0,i.kt)("inlineCode",{parentName:"p"},"elm")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"cql")," is then added to FHIR ",(0,i.kt)("a",{parentName:"p",href:"http://hl7.org/fhir/R4/library.html"},"Library")," resource as Base64 encoded data to allow the code to get the calculation for each variable to be used by FHIR compatible software."),(0,i.kt)("p",null,"Some resources to get details on CQL writing are below:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"CQL brief authoring guide ",(0,i.kt)("a",{parentName:"li",href:"https://cql.hl7.org/02-authorsguide.html"},"https://cql.hl7.org/02-authorsguide.html")),(0,i.kt)("li",{parentName:"ul"},"CQL operators and functions ",(0,i.kt)("a",{parentName:"li",href:"https://cql.hl7.org/04-logicalspecification.html"},"https://cql.hl7.org/04-logicalspecification.html")," and ",(0,i.kt)("a",{parentName:"li",href:"https://cql.hl7.org/09-b-cqlreference.html"},"https://cql.hl7.org/09-b-cqlreference.html")),(0,i.kt)("li",{parentName:"ul"},"FHIRPath mapping in CQL ",(0,i.kt)("a",{parentName:"li",href:"https://cql.hl7.org/16-i-fhirpathtranslation.html"},"https://cql.hl7.org/16-i-fhirpathtranslation.html"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Examples ",(0,i.kt)("a",{parentName:"li",href:"https://cql.hl7.org/15-h-timeintervalcalculations.html"},"Time Interval")," and ",(0,i.kt)("a",{parentName:"li",href:"https://cql.hl7.org/03-developersguide.html#conditional-expressions"},"Detail on Queries")))),(0,i.kt)("li",{parentName:"ul"},"CQL Sandbox ",(0,i.kt)("a",{parentName:"li",href:"https://sandbox.cqlab.io/"},"here")),(0,i.kt)("li",{parentName:"ul"},"CQL Android editor app ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Path-Check/cql-editor-app/"},"here"))),(0,i.kt)("p",null,"Here is a working example of CQL for a ",(0,i.kt)("a",{parentName:"p",href:"http://hl7.org/fhir/measure.html"},"Measure")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'library HOUSEHOLDIND01 version \'1\'\n\nusing FHIR version \'4.0.1\'\n\ninclude "FHIRHelpers" version \'4.0.1\' called FHIRHelpers\ninclude "COMMON" version \'1\' called COMMON\n\nparameter "Measurement Period" Interval<DateTime>\n\ncontext Patient\n\n// to ensure that Measure Period with a closed boundary can be handled\ndefine "Filter Period": Interval("Measurement Period".low - 1 day , "Measurement Period".high + 1 day)\n\ndefine "All Groups": [Group] G\n    where G.type = \'person\'\n    and First(G.identifier).period.start during "Filter Period"\n\ndefine "All Group Members": flatten("All Groups" G return (G.member M return M.entity))\n\ndefine "Group": "All Groups" G\n    return G.id\n\ndefine "Group Member": "All Group Members" G\n    where COMMON."IdPart"(Patient.id) = Split(G.reference, \'/\')[1]\n\ndefine "Patients": {Patient}\n\ndefine "Males": Patient.gender=\'male\'\ndefine "Females": Patient.gender=\'female\'\n\ndefine "Age": CalculateAgeInYearsAt(Patient.birthDate, ToDate("Measurement Period".high))\n\ndefine "Age Stratifier":\n  case\n    when "Age" < 1 then \'P0Y\'\n    when "Age" in Interval[1,5] then \'P1-5Y\'\n    when "Age" in Interval[6, 14] then \'P6-14Y\'\n    when "Age" in Interval[15, 49] then \'P15-49Y\'\n    when "Age" >= 50 then \'P50Y\'\n    else \'Unspecified\'\n  end\n')),(0,i.kt)("p",null,"The variables in CQL can be referenced into a ",(0,i.kt)("a",{parentName:"p",href:"http://hl7.org/fhir/measure.html"},"Measure")," and/or ",(0,i.kt)("a",{parentName:"p",href:"http://hl7.org/fhir/plandefinition.html"},"PlanDefinition")," after adding the ",(0,i.kt)("inlineCode",{parentName:"p"},"Library")," containing CQL as referenced library."),(0,i.kt)("h2",{id:"common-challenges-with-cql"},"Common challenges with CQL"),(0,i.kt)("p",null,"CQL scripts when run first time take too long to run. Look into libraries or classes it loads first time and move those to Application startup. To solve this pre-load the libraries."))}d.isMDXComponent=!0}}]);