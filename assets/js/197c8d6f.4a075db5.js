"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[17],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=l(t),d=a,m=f["".concat(s,".").concat(d)]||f[d]||u[d]||i;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2616:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const i={},o="Refresh/Invalidate cache",c={unversionedId:"android-app/configurations/event-management/refresh-cache",id:"android-app/configurations/event-management/refresh-cache",title:"Refresh/Invalidate cache",description:"Event management implementation provides the ability to configure when to invalidate register cache after form submission.",source:"@site/docs/android-app/configurations/event-management/refresh-cache.mdx",sourceDirName:"android-app/configurations/event-management",slug:"/android-app/configurations/event-management/refresh-cache",permalink:"/android-app/configurations/event-management/refresh-cache",draft:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/docs/android-app/configurations/event-management/refresh-cache.mdx",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Configurations",permalink:"/android-app/configurations/"},next:{title:"Resource closure using configured questionnaires",permalink:"/android-app/configurations/event-management/resource-closure"}},s={},l=[{value:"Sample questionnaire with <code>refreshContent</code>",id:"sample-questionnaire-with-refreshcontent",level:2}],p={toc:l};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"refreshinvalidate-cache"},"Refresh/Invalidate cache"),(0,a.kt)("p",null,"Event management implementation provides the ability to configure when to invalidate register cache after form submission."),(0,a.kt)("p",null,"Since we currently cache the register data, we need to refresh/invalidate the cache every time a patient or family is removed from the app. This is to make sure the UI shows the correct data at all times."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"refreshContent")," field in the ",(0,a.kt)("inlineCode",{parentName:"p"},"questionnaireConfig")," determines whether the register cache should be invalidated when a form is submitted."),(0,a.kt)("h2",{id:"sample-questionnaire-with-refreshcontent"},"Sample questionnaire with ",(0,a.kt)("inlineCode",{parentName:"h2"},"refreshContent")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'       {\n         "title": "Pregnancy Outcome",\n         "titleColor": "@{patientTextColor}",\n         "visible": "@{isPregnant}",\n         "enabled": "@{patientActive}",\n         "actions": [\n           {\n             "trigger": "ON_CLICK",\n             "workflow": "LAUNCH_QUESTIONNAIRE",\n             "questionnaire": {\n               "id": "questionnaire-uuid",\n               "title": "Pregnancy outcome",\n               "resourceIdentifier": "@{patientId}",\n               "planDefinitions": [\n                 "planDefinitions-uuid"\n               ],\n               "refreshContent" : true\n             }\n           }\n         ]\n       }\n')))}u.isMDXComponent=!0}}]);