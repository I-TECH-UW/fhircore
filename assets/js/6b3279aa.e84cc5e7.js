"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[898],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(a),d=n,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return a?r.createElement(h,o(o({ref:t},u),{},{components:a})):r.createElement(h,o({ref:t},u))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1853:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const l={},o="Releases",i={unversionedId:"developer-setup/automated-releases",id:"developer-setup/automated-releases",title:"Releases",description:"The OpenSRP FHIR Core releases occur at most once every 2 weeks, i.e. at the conclusion of a sprint. The release process follows the gitlab flow style described in the following diagram:",source:"@site/docs/developer-setup/automated-releases.mdx",sourceDirName:"developer-setup",slug:"/developer-setup/automated-releases",permalink:"/developer-setup/automated-releases",draft:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/docs/developer-setup/automated-releases.mdx",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Developer Setup",permalink:"/developer-setup/"},next:{title:"Code Reviews",permalink:"/developer-setup/code-reviews"}},s={},p=[{value:"Release automation with tags",id:"release-automation-with-tags",level:2},{value:"Deleting a tag",id:"deleting-a-tag",level:2}],u={toc:p};function c(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"releases"},"Releases"),(0,n.kt)("p",null,"The OpenSRP FHIR Core releases occur at most once every 2 weeks, i.e. at the conclusion of a sprint. The release process follows the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/topics/gitlab_flow.html#release-branches-with-gitlab-flow"},"gitlab flow")," style described in the following diagram:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"gitlab flow diagram",src:a(8406).Z,width:"910",height:"372"})),(0,n.kt)("p",null,"This allows changes to occur on the release branch while unrelated code continues being merged into main. Specifically, release follow the following steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Code freeze: the creation of a branch for the release version as well as the first release candidate (labeled RC1).",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"For example, for release version v0.2.0 a branch opensrp-0.2.0 is create and a pre-release opensrp-0.2.0-rc1"))),(0,n.kt)("li",{parentName:"ol"},"Candidate progression: This is followed by 1-2 weeks of QA and error fixing",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Whenever we find an error in the candidate, a pull request with a fix for the error is opened against the release branch (e.g. v0.2.0) and against the main branch."),(0,n.kt)("li",{parentName:"ul"},"Once the error is fixed and merged into the release branch (multiple errors can be batched) a new pre-release is created, e.g. opensrp-0.2.0-rc2"))),(0,n.kt)("li",{parentName:"ol"},"Final release: when the release meets requirements, a final release, opensrp-0.2.0 is created, with a tag v0.2.0.")),(0,n.kt)("h2",{id:"release-automation-with-tags"},"Release automation with tags"),(0,n.kt)("p",null,"As part of integrating Continuous Delivery(CD) into the development lifecycle, CI is set up to generate an APK."),(0,n.kt)("p",null,"The configuration requires the tag to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The product name: ",(0,n.kt)("em",{parentName:"li"},"opensrp")),(0,n.kt)("li",{parentName:"ul"},"Followed by the ",(0,n.kt)("em",{parentName:"li"},"version")," in the format ",(0,n.kt)("inlineCode",{parentName:"li"},"[0-9]+.[0-9]+.[0-9]+[0-9a-zA-Z.-]+")),(0,n.kt)("li",{parentName:"ul"},"Followed by an optional ",(0,n.kt)("em",{parentName:"li"},"suffix")," depending on the release e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"-alpha"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"-rc"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"-beta")," e.t.c")),(0,n.kt)("p",null,"The following are all valid tags that will trigger the generation of a release APK"),(0,n.kt)("blockquote",null,(0,n.kt)("ul",{parentName:"blockquote"},(0,n.kt)("li",{parentName:"ul"},"opensrp-1.2.0"),(0,n.kt)("li",{parentName:"ul"},"opensrp-1.2.0-alpha"),(0,n.kt)("li",{parentName:"ul"},"opensrp-1.2.0-beta"),(0,n.kt)("li",{parentName:"ul"},"opensrp-1.2.0-rc1"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Note:")," e.g. when creating a tag for the ",(0,n.kt)("em",{parentName:"p"},"OpenSRP Version 1.2.0"),", use the command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git tag -a opensrp-1.2.0 -s  && git push origin opensrp-1.2.0\n")),(0,n.kt)("p",null,"When you run the command, you will be prompted to ",(0,n.kt)("em",{parentName:"p"},"add a message"),". The message should be of the format:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Template"),(0,n.kt)("th",{parentName:"tr",align:null},"Sample"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("pre",null," TITLE ",(0,n.kt)("br",null)," - Release note 1",(0,n.kt)("br",null)," - Release note 2")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("pre",null," BETA RELEASE ",(0,n.kt)("br",null)," - Adds Login by PIN functionality ",(0,n.kt)("br",null)," - Fixes sync bug causing crash on install "))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Note:")," For convention, the TITLE should be ",(0,n.kt)("em",{parentName:"p"},"Capitalized"),"."),(0,n.kt)("h2",{id:"deleting-a-tag"},"Deleting a tag"),(0,n.kt)("p",null,"Sometimes you may want to delete a tag, e.g. if you push an incorrect tag, need to update the tag message etc."),(0,n.kt)("p",null,"For example, to delete the opensrp-1.2.0 tag run the command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git push --delete origin opensrp-1.2.0 && git tag --delete opensrp-1.2.0\n")))}c.isMDXComponent=!0},8406:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/gitlabflow-278855cb6e2ec0f3d96d2ff2722bbe1f.png"}}]);