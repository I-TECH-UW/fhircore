"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[6278],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=c(a),u=n,m=h["".concat(l,".").concat(u)]||h[u]||d[u]||i;return a?r.createElement(m,o(o({ref:t},p),{},{components:a})):r.createElement(m,o({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},1702:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const i={sidebar_position:2,sidebar_label:"App Features"},o="App Features (release v0.2.3\u20130.2.4)",s={unversionedId:"about-opensrp/app-features/readme",id:"about-opensrp/app-features/readme",title:"App Features (release v0.2.3\u20130.2.4)",description:"Recording services",source:"@site/docs/about-opensrp/app-features/readme.mdx",sourceDirName:"about-opensrp/app-features",slug:"/about-opensrp/app-features/",permalink:"/about-opensrp/app-features/",draft:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/docs/about-opensrp/app-features/readme.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"App Features"},sidebar:"defaultSidebar",previous:{title:"History",permalink:"/about-opensrp/history/"},next:{title:"Admin Dashboard Features",permalink:"/about-opensrp/admin-dashboard-features/"}},l={},c=[{value:"Recording services",id:"recording-services",level:2},{value:"Patient and family registration",id:"patient-and-family-registration",level:2},{value:"Finding patients",id:"finding-patients",level:2},{value:"Patient records",id:"patient-records",level:2},{value:"Care plans",id:"care-plans",level:2},{value:"Offline mode",id:"offline-mode",level:2},{value:"Tasks",id:"tasks",level:2},{value:"In-app reports",id:"in-app-reports",level:2},{value:"Stock and commodity management",id:"stock-and-commodity-management",level:2},{value:"Multi-language support",id:"multi-language-support",level:2},{value:"Peer-to-peer data transfer",id:"peer-to-peer-data-transfer",level:2},{value:"Roadmap for 2023\u20132024",id:"roadmap-for-20232024",level:2}],p={toc:c};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"app-features-release-v023024"},"App Features (release v0.2.3\u20130.2.4)"),(0,n.kt)("h2",{id:"recording-services"},"Recording services"),(0,n.kt)("p",null,"Patient and health service information is captured using forms with questions and fields. The app keeps the interaction as simple as possible and has error-checking to keep entered data accurate."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Input fields")),(0,n.kt)("p",null,"A range of input fields are available: text/string, , number, boolean, single choice, multiple choice, dropdown, date picker, date and time picker, slider, attachment, display an image and display a label. Fields can be restricted to specific related entires \u2014 for example if there is a number entry used for phone number, it can be set to only accept a certain number of digits or else show an error message. Fields can also be set to required, which highlights the field with an error if the user tries to save the form without filling in that field. Each fIeld can have helper text which is accessible when the user taps a question mark icon."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Field styling")),(0,n.kt)("p",null,"Field styling is flexible with regards to font size and styling. Labels for form can use any font (applying to the entire form), and individual words or sections can have fonts be styled as italic, bold, underline, and color. The back and next button colors and font can also be configured."),(0,n.kt)("p",null,"To style without any changes in the FHIRCore/SDK, use HTML tags as part of the question text. The following tags were proven to be applicable to use:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Bold:  <b",">","text </b",">"),(0,n.kt)("li",{parentName:"ul"},"Italic: <i",">","text</i",">"),(0,n.kt)("li",{parentName:"ul"},"Underline: <u",">","text</u",">"),(0,n.kt)("li",{parentName:"ul"},"Strikethrough: <s",">","text</s",">"),(0,n.kt)("li",{parentName:"ul"},'Coloring: <span style="color:#006EB8"',">","text</span",">")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Progress bar")),(0,n.kt)("p",null,"A form progress bar can be configured to show or not. A progress bar is helpful in multi-page forms. It shows how far into a form a user is based on the current question viewed within the current total number of questions \u2014 and not based on the number of fields answered."),(0,n.kt)("h2",{id:"patient-and-family-registration"},"Patient and family registration"),(0,n.kt)("p",null,"A common step in community health programs is creating a list of all persons and households in a health worker's area. OpenSRP supports registering households and people quickly using simple forms."),(0,n.kt)("p",null,"Patients and households are associated to a health worker through a location. A health worker is assigned to a specific area or set of areas, and every person they register is assigned to the same area or set of areas."),(0,n.kt)("p",null,"In cases where patients visit or health workers cover multiple clinics across area, both the patient and the health worker would be assigned to a higher level location. For example, instead of being assigned to a village, they would be assigned to a facility area or county. That would result in a patient showing up on any of the facility patient lists in that higher level area, and for that patients medical record to be synced to the health worker's device."),(0,n.kt)("h2",{id:"finding-patients"},"Finding patients"),(0,n.kt)("p",null,"Navigating to a patient quickly is paramount for health work, especially when in the community. Because it is common for OpenSRP to be used in places where many people may share similar names, we offer many ways for patient look-up."),(0,n.kt)("p",null,'Patients can be searched by NAME or ID. This is a manual search where the patient list is updated after two characters are entered (the results update without pressing "enter"). The search will display patients only assigned to the health worker (Read: how patients are assigned to health workers - this is linked to the appropriate management section)'),(0,n.kt)("p",null,"The ID can be a national ID number, a local ID number, or an app-generated ID. For a national ID number or local ID number, there is an option to either have the IDs be non-unique (there is no restriction on reusing IDs) or system-unique (it is enforced that IDs are not shared across the system). App-generated IDs are 32 character long strings that are always unique."),(0,n.kt)("p",null,"Patients are listed in order of time overdue in each patient register, and can be configured to be listed according to other criteria. For households and patients, that means households with more tasks and more overdue tasks are listed first, and households with fewer tasks and fewer overdue tasks are listed last."),(0,n.kt)("h2",{id:"patient-records"},"Patient records"),(0,n.kt)("p",null,"Patient records can be configured to show specific information about the patient, such as their demographic details, as well as upcoming Tasks and list of recent visits. What information is shown, the order in which it is shown, and the color and highlighting of the information show are configurable."),(0,n.kt)("h2",{id:"care-plans"},"Care plans"),(0,n.kt)("p",null,"Care plans are the health service tasks and protocols a patient should receive depending on their status or condition, with the purpose of making sure the right services are provided to patients when they are supposed to be given. The tasks in the care plan are scheduled at the patient receives the updated status."),(0,n.kt)("p",null,"For example, a patient who has just been recorded as pregnant will receive a schedule of antenatal visit tasks associated with their gestational age. Each task is completed based on completing a form associated with that task. For example, an antenatal visit in pregnancy week 32 might include a form to check for pregnant danger signs, baby heart beats per minute, and a counseling session, which the health worker can fill out."),(0,n.kt)("p",null,"Tasks can be constrained with dates that make them inactive, active/due, overdue, and expired. Taking the example pregnancy scenario above, the week 32 pregnancy visit task can be inactive until week 30, then become active for weeks 30\u201332, then overdue in weeks 32-35, and expire after week 35."),(0,n.kt)("p",null,"OpenSRP has prebuilt care plans for antenatal care, postnatal care, childhood health, and maternal health."),(0,n.kt)("h2",{id:"offline-mode"},"Offline mode"),(0,n.kt)("p",null,"OpenSRP stores patient records entirely offline and is able to register patients and record services without internet or data access."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Data syncing")),(0,n.kt)("p",null,"When a user is offline and then gets access to the internet with the app is open, records sync automatically with the centralized cloud-based server. Syncing can take place at specific intervals (in order to save battery life) or triggered manually by the user."),(0,n.kt)("p",null,"When offline, the most up-to-date patient data exists on the user's device. If a patient record is recorded on another offline device, the data from the more recent encounter is used."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Fully offline record sync")),(0,n.kt)("p",null,"Sometimes, community health workers or other devices can be so remote as to never be connected to the internet or data connection. In this scenario, OpenSRP supports device-to-device data transfer to update a centralized cloud-based server. The way it works is a person with a device who does access the internet meets with the person with a device who never connects to the internet. Patient records are transferred up the line, from device to device, until records can be synced to the cloud to an internet-connected device."),(0,n.kt)("p",null,"Data can be transferred without exposing the patient records in the OpenSRP app. For example, if a health worker does not have access to another health worker's patient data because they are assigned to a different location, data can still be transferred through their device and to the cloud."),(0,n.kt)("h2",{id:"tasks"},"Tasks"),(0,n.kt)("p",null,"Tasks are used to identify patients that are due for health services. They are meant to help health workers prioritize who to visit at any given time by prominently appearing in the register list views."),(0,n.kt)("p",null,"Tasks in OpenSRP can fit into five categories: (1) inactive and not completable, (2) inactive but completable, (3) active and due, (4) overdue, and (5) expired. Tasks are represented in the app in both register lists and profiles in configurable colors. They are listed in order of due date, and can be configured to be listed according to other criteria stored in the Task."),(0,n.kt)("p",null,"Tasks can be due on a specific day or for a time period. The primary settings for a task are the health service form that closes the task and time periods for when the task becomes active, remains active, becomes overdue, and expires."),(0,n.kt)("h2",{id:"in-app-reports"},"In-app reports"),(0,n.kt)("p",null,"OpenSRP can generate easy-to-understand indicators used by community health workers to track progress, celebrate successes, and learn about gaps in coverage.\nIndicators are calculated from a user's patient list (and so show a health worker's achievements) and are often tied to goals or targets set by health supervisors. They can be grouped by register."),(0,n.kt)("h2",{id:"stock-and-commodity-management"},"Stock and commodity management"),(0,n.kt)("p",null,"OpenSRP makes stock and commodity management easier for health workers to anticipate how much they need and thus avoid stock outs."),(0,n.kt)("p",null,"When stock is received by a health worker, they use a consumption log form to document commodities received. As commodities are provided or used with patients during health services, stock is automatically deducted. If a stock level reaches a predetermined threshold, the app will highlight that commodity so the health worker can obtain more. During the next commodity refill, the app can calculate the correct balance the health worker should receive."),(0,n.kt)("h2",{id:"multi-language-support"},"Multi-language support"),(0,n.kt)("p",null,"OpenSRP supports multiple languages through translatable built in content and user managed translations of form and configuration content.\nLanguages the core application currently supports\nHow much effort for the core application to support a new language"),(0,n.kt)("h2",{id:"peer-to-peer-data-transfer"},"Peer-to-peer data transfer"),(0,n.kt)("p",null,"OpenSRP supports peer-to-peer data transfer using \u201cWiFi-direct\u201d technology so that 2 off-line devices can connect to each other and synchronize information from one device to another. The receiving device will only be able to view devices it has permission to view, even though it may receive and store in its device database information it does not have permission to view."),(0,n.kt)("h2",{id:"roadmap-for-20232024"},"Roadmap for 2023\u20132024"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Editing submitted form data"),(0,n.kt)("li",{parentName:"ul"},"Draft and in-progress forms")))}d.isMDXComponent=!0}}]);