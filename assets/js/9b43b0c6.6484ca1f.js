"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[287],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,k=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return r?n.createElement(k,l(l({ref:t},d),{},{components:r})):n.createElement(k,l({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4588:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={},l="Resource closure using background workers",i={unversionedId:"engineering/android-app/configurations/event-management/resource-closure-by-background-worker",id:"engineering/android-app/configurations/event-management/resource-closure-by-background-worker",title:"Resource closure using background workers",description:"Event management implementation provides the ability to configure background workers so that we can state which resources to close when they run.",source:"@site/docs/engineering/android-app/configurations/event-management/resource-closure-by-background-worker.mdx",sourceDirName:"engineering/android-app/configurations/event-management",slug:"/engineering/android-app/configurations/event-management/resource-closure-by-background-worker",permalink:"/engineering/android-app/configurations/event-management/resource-closure-by-background-worker",draft:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/docs/engineering/android-app/configurations/event-management/resource-closure-by-background-worker.mdx",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Refresh/Invalidate cache",permalink:"/engineering/android-app/configurations/event-management/refresh-cache"},next:{title:"Resource closure using configured questionnaires",permalink:"/engineering/android-app/configurations/event-management/resource-closure"}},s={},p=[{value:"Sample event workflow configuration",id:"sample-event-workflow-configuration",level:2},{value:"EventWorkflows properties",id:"eventworkflows-properties",level:2},{value:"Event Resource Properties",id:"event-resource-properties",level:3},{value:"DataQuery properties",id:"dataquery-properties",level:3},{value:"Filtering Related Resources",id:"filtering-related-resources",level:2},{value:"Sample filter fhirpath expression configuration",id:"sample-filter-fhirpath-expression-configuration",level:3},{value:"FilterFhirPathExpression properties",id:"filterfhirpathexpression-properties",level:3}],d={toc:p};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"resource-closure-using-background-workers"},"Resource closure using background workers"),(0,a.kt)("p",null,"Event management implementation provides the ability to configure background workers so that we can state which resources to close when they run."),(0,a.kt)("p",null,"Some use cases would be -"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Closing related resources such as conditions when CarePlans are closed by the background worker that cancels expired tasks."),(0,a.kt)("li",{parentName:"ul"},"Closing related resources such as conditions when the background worker that closes CarePlans when all it's related tasks are either ",(0,a.kt)("inlineCode",{parentName:"li"},"cancelled")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"complete"),".")),(0,a.kt)("p",null,"This is achieved by use of the ",(0,a.kt)("inlineCode",{parentName:"p"},"EventWorkFlow")," config. The ",(0,a.kt)("inlineCode",{parentName:"p"},"EventWorkFlow")," config is added to the Application Config."),(0,a.kt)("h2",{id:"sample-event-workflow-configuration"},"Sample event workflow configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n"eventWorkflows": [\n    {\n      "eventType": "RESOURCE_CLOSURE",\n      "eventResources": [\n        {\n          "id": "sickChildConditionToBeClosed",\n          "resource": "Condition",\n          "configRules": [\n            {\n              "name": "patientId",\n              "condition": "true",\n              "actions": [\n                "data.put(\'patientId\', fhirPath.extractValue(CarePlan, \'CarePlan.subject.reference\'))"\n              ]\n            }\n          ],\n          "dataQueries": [\n            {\n              "paramName": "code",\n              "filterCriteria": [\n                {\n                  "dataType": "CODEABLECONCEPT",\n                  "value": {\n                    "system": "http://snomed.info/sct",\n                    "code": "275142008"\n                  }\n                }\n              ]\n            },\n            {\n              "paramName": "subject",\n              "filterCriteria": [\n                {\n                  "dataType": "REFERENCE",\n                  "computedRule": "patientId"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n')),(0,a.kt)("p",null,"The current implementation eventWorkflow config only handle closure of resources, hence the event type defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"RESOURCE_CLOSURE"),"."),(0,a.kt)("p",null,"The eventWorkFlow config for this implementation does not contain trigger conditions."),(0,a.kt)("p",null,"The event resources define which resource is eligible for closure as well as any related resources."),(0,a.kt)("p",null,"The data queries define how to search for and filter the resources from the database."),(0,a.kt)("p",null,"Once the resources have been retrieved from the database, the next step is to close the resources by updating the values of certain fields. For the current implementation this has been done in the code. This is not configurable at this point.\nClosure of any resource that has not been handled will need an update to the code that performs resource closure."),(0,a.kt)("p",null,"The following table contains the values for each field that is required to close a resource.field"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Resource"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Careplan"),(0,a.kt)("td",{parentName:"tr",align:"left"},"status"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Completed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Task"),(0,a.kt)("td",{parentName:"tr",align:"left"},"status"),(0,a.kt)("td",{parentName:"tr",align:"left"},"cancelled")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"}),(0,a.kt)("td",{parentName:"tr",align:"left"},"lastModified"),(0,a.kt)("td",{parentName:"tr",align:"left"},"current date")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Condition"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Condition.clinicalStatus"),(0,a.kt)("td",{parentName:"tr",align:"left"},"code:370996005, display:resolved, system: ",(0,a.kt)("a",{parentName:"td",href:"http://www.snomed.org/"},"http://www.snomed.org/"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Procedure"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Procedure.status"),(0,a.kt)("td",{parentName:"tr",align:"left"},"stopped")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"ServiceRequest"),(0,a.kt)("td",{parentName:"tr",align:"left"},"status"),(0,a.kt)("td",{parentName:"tr",align:"left"},"revoked")))),(0,a.kt)("h2",{id:"eventworkflows-properties"},"EventWorkflows properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"eventType"),(0,a.kt)("td",{parentName:"tr",align:null},"The intention of the eventWorkflow. E.g close resources"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"},"RESOURCE_CLOSURE is supported for now")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"triggerConditions"),(0,a.kt)("td",{parentName:"tr",align:null},"This defines an array of condition for to be met for the event to run"),(0,a.kt)("td",{parentName:"tr",align:"center"},"no"),(0,a.kt)("td",{parentName:"tr",align:"center"},"null")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"eventResourceId"),(0,a.kt)("td",{parentName:"tr",align:null},"uniqueId of resource id to be closed"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"eventResources"),(0,a.kt)("td",{parentName:"tr",align:null},"A list of resources to close(Type of ResourceConfig)"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"})))),(0,a.kt)("h3",{id:"event-resource-properties"},"Event Resource Properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"id"),(0,a.kt)("td",{parentName:"tr",align:null},"uniqueId of resource id to be closed"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"resource"),(0,a.kt)("td",{parentName:"tr",align:null},"The type of resource"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"configRules"),(0,a.kt)("td",{parentName:"tr",align:null},"Rules to be that are executed to populate dynamic values such as a patient id"),(0,a.kt)("td",{parentName:"tr",align:"center"},"no"),(0,a.kt)("td",{parentName:"tr",align:"center"})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"dataQueries"),(0,a.kt)("td",{parentName:"tr",align:null},"Configs used to represent how resources to be closed are retrieved from the database"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"relatedResources"),(0,a.kt)("td",{parentName:"tr",align:null},"Configs that represent how to fetch related resources e.g Tasks linked to a CarePlan"),(0,a.kt)("td",{parentName:"tr",align:"center"},"no"),(0,a.kt)("td",{parentName:"tr",align:"center"})))),(0,a.kt)("h3",{id:"dataquery-properties"},"DataQuery properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"paramName"),(0,a.kt)("td",{parentName:"tr",align:null},"String representation of the resource field to search on"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"operation"),(0,a.kt)("td",{parentName:"tr",align:null},"Logical SQL operation to perform i.e AND, OR"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"},"AND")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"filterCriteria"),(0,a.kt)("td",{parentName:"tr",align:null},"Configs that represent the datatype and value for filtering data"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"})))),(0,a.kt)("h2",{id:"filtering-related-resources"},"Filtering Related Resources"),(0,a.kt)("p",null,"Filtering the Related Resources is achieved by use of the ",(0,a.kt)("inlineCode",{parentName:"p"},"filterFhirPathExpression")," configuration.\nIt specifies which field and values to filter the resources by."),(0,a.kt)("h3",{id:"sample-filter-fhirpath-expression-configuration"},"Sample filter fhirpath expression configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "filterFhirPathExpression": [\n    {\n      "key": "Task.status",\n      "value": "ready"\n    }\n  ]\n}\n')),(0,a.kt)("h3",{id:"filterfhirpathexpression-properties"},"FilterFhirPathExpression properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"key"),(0,a.kt)("td",{parentName:"tr",align:null},"The resource field to apply the filter on"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"value"),(0,a.kt)("td",{parentName:"tr",align:null},"The value that the resource field should match for the filter to pass"),(0,a.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,a.kt)("td",{parentName:"tr",align:"center"})))))}c.isMDXComponent=!0}}]);