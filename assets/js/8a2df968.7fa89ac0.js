"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[498],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(n),g=i,m=u["".concat(l,".").concat(g)]||u[g]||c[g]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5765:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(7462),i=(n(7294),n(3905));const a={},o="Widget configurations",s={unversionedId:"configurations/widgets/widget-config",id:"configurations/widgets/widget-config",title:"Widget configurations",description:"Configurations used to configure widgets. FHIR Core uses widgets to render views. Examples are rows, columns, cards, buttons",source:"@site/docs/configurations/widgets/widget-config.mdx",sourceDirName:"configurations/widgets",slug:"/configurations/widgets/widget-config",permalink:"/configurations/widgets/widget-config",draft:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/docs/configurations/widgets/widget-config.mdx",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Sync configuration",permalink:"/configurations/sync-config"},next:{title:"Developer Setup",permalink:"/developer-setup/"}},l={},d=[{value:"Flex Alignment widgets",id:"flex-alignment-widgets",level:2},{value:"Display other resources (List Resources) inside another list",id:"display-other-resources-list-resources-inside-another-list",level:2},{value:"Config properties",id:"config-properties",level:2}],p={toc:d};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"widget-configurations"},"Widget configurations"),(0,i.kt)("p",null,"Configurations used to configure widgets. FHIR Core uses widgets to render views. Examples are rows, columns, cards, buttons"),(0,i.kt)("admonition",{type:"info"}),(0,i.kt)("h2",{id:"flex-alignment-widgets"},"Flex Alignment widgets"),(0,i.kt)("p",null,"To display items in flexRow below sample JSON config works fine. Replace ",(0,i.kt)("strong",{parentName:"p"},"COMPOUND_TEXT")," with your preferred widget component. Please note, the below json borrows from ",(0,i.kt)("strong",{parentName:"p"},"LIST")," component properties"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n     "viewType": "LIST",\n      "id": "give_your_list_an_id",\n      "baseResource": "Resource_to_use",\n      "orientation": "HORIZONTAL",\n       "emptyList": {\n        "message": ""\n                     },\n        "registerCard": {\n        "rules": [],\n         "views": [\n          {\n           "viewType": "COMPOUND_TEXT",\n            "primaryTextBackgroundColor": "#F9CFD1",\n             "primaryText": "@{carePlanTitle}",\n             "primaryTextColor": "@{carePlanTextColor}",\n             "fontSize": 13,\n             "padding": 7,\n              "borderRadius": 6\n      }\n    ]\n    }\n   }\n')),(0,i.kt)("h2",{id:"display-other-resources-list-resources-inside-another-list"},"Display other resources (List Resources) inside another list"),(0,i.kt)("p",null,"To display list resources inside a list and execute it's rules , add it's configurations as show below"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},' {\n   "viewType": "LIST",\n   "id": "statusList",\n   "listResource": "Condition",\n   "orientation": "HORIZONTAL",\n   "emptyList": {\n     "message": ""\n   },\n   "registerCard": {\n     "rules": [\n       {\n         "name": "conditionTitle",\n         "condition": "true",\n         "actions": ["data.put(\'conditionTitle\', fhirPath.extractValue(Condition, \\"Condition.where(clinicalStatus.coding.where(code = \'active\').exists()).code.text\\"))"]\n       }\n     ],\n     "views": [\n       {\n         "viewType": "COMPOUND_TEXT",\n         "primaryTextBackgroundColor": "#F5F5F5",\n         "primaryText": "@{conditionTitle}",\n         "primaryTextColor": "#6F7274",\n         "fontSize": 13,\n         "padding": 7,\n         "borderRadius": 6\n       }\n     ]\n   }\n }\n')),(0,i.kt)("h2",{id:"config-properties"},"Config properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"id"),(0,i.kt)("td",{parentName:"tr",align:null},"Unique identifier for the application"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,i.kt)("td",{parentName:"tr",align:"center"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"viewType"),(0,i.kt)("td",{parentName:"tr",align:null},"First viewType should be a list. This will help in iterating over the data to display"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,i.kt)("td",{parentName:"tr",align:"center"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"baseResource"),(0,i.kt)("td",{parentName:"tr",align:null},"Resource to get data from"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,i.kt)("td",{parentName:"tr",align:"center"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"orientation"),(0,i.kt)("td",{parentName:"tr",align:null},"This is the direction you want to the widgets to flex"),(0,i.kt)("td",{parentName:"tr",align:"center"},"yes"),(0,i.kt)("td",{parentName:"tr",align:"center"},"VERTICAL")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"emptyList"),(0,i.kt)("td",{parentName:"tr",align:null},"empty list json with a message to show in case the resource data to display is empty"),(0,i.kt)("td",{parentName:"tr",align:"center"},"no but highly recommended"),(0,i.kt)("td",{parentName:"tr",align:"center"},"no visits")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"registerCard"),(0,i.kt)("td",{parentName:"tr",align:null},"card to display widgets at"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,i.kt)("td",{parentName:"tr",align:"center"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"views"),(0,i.kt)("td",{parentName:"tr",align:null},"the desired widgets and their properties to be displayed"),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"center"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"resources"),(0,i.kt)("td",{parentName:"tr",align:null},"the list resources to execute rules for"),(0,i.kt)("td",{parentName:"tr",align:"center"},"No but should be included if you want to display data as described in the sub-title"),(0,i.kt)("td",{parentName:"tr",align:"center"},"emptyList()")))))}c.isMDXComponent=!0}}]);