"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[4717],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(t),u=a,g=m["".concat(s,".").concat(u)]||m[u]||c[u]||i;return t?r.createElement(g,o(o({ref:n},d),{},{components:t})):r.createElement(g,o({ref:n},d))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3473:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const i={},o="Code Standards",l={unversionedId:"engineering-android-app/developer-setup/code-standards",id:"engineering-android-app/developer-setup/code-standards",title:"Code Standards",description:"Naming Conventions",source:"@site/docs/engineering-android-app/developer-setup/code-standards.mdx",sourceDirName:"engineering-android-app/developer-setup",slug:"/engineering-android-app/developer-setup/code-standards",permalink:"/engineering-android-app/developer-setup/code-standards",draft:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/docs/engineering-android-app/developer-setup/code-standards.mdx",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Code Reviews",permalink:"/engineering-android-app/developer-setup/code-reviews"},next:{title:"Code Testing",permalink:"/engineering-android-app/developer-setup/code-testing"}},s={},p=[{value:"Naming Conventions",id:"naming-conventions",level:2},{value:"Branch Naming",id:"branch-naming",level:2},{value:"Commit Messages",id:"commit-messages",level:2}],d={toc:p};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"code-standards"},"Code Standards"),(0,a.kt)("h2",{id:"naming-conventions"},"Naming Conventions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"When using abbreviations in CamelCase, keep the first letter capitalized and lowercase the remaining letters. For example",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},'A "BMI Thresholds" variable name must be written as ',(0,a.kt)("inlineCode",{parentName:"li"},"bmiThresholds")),(0,a.kt)("li",{parentName:"ul"},'An "ANC Patient Repository" class name must be written as ',(0,a.kt)("inlineCode",{parentName:"li"},"AncPatientRespository"))))),(0,a.kt)("h2",{id:"branch-naming"},"Branch Naming"),(0,a.kt)("p",null,"Create a new branch using the following naming convention:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"issue-number-feature-name\n")),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"238-fix-login-page-styling\n")),(0,a.kt)("h2",{id:"commit-messages"},"Commit Messages"),(0,a.kt)("p",null,"Here are some guidelines when writing a commit message:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Separate subject/title from body with a blank line"),(0,a.kt)("li",{parentName:"ol"},"Limit the subject line to 50 characters"),(0,a.kt)("li",{parentName:"ol"},"Capitalize the subject line/Title"),(0,a.kt)("li",{parentName:"ol"},"Do not end the subject line with a period"),(0,a.kt)("li",{parentName:"ol"},"Use hyphens at the beginning of the commit messages in the body"),(0,a.kt)("li",{parentName:"ol"},"Use the imperative mood in the commit messages"),(0,a.kt)("li",{parentName:"ol"},"Wrap the body at 72 characters"),(0,a.kt)("li",{parentName:"ol"},"Use the body to explain what and why vs. how")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample commit message:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Implement Login functionality\n\n- Add login page view\n- Implement authentication and credentials management\n- Add tests for login implementation\n- Fix sync bug causing crash on install\n")))}c.isMDXComponent=!0}}]);