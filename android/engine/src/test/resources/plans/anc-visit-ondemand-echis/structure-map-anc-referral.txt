map "http://hl7.org/fhir/StructureMap/a4b157f2-6f15-4acb-b2a9-c62492178db0" = 'AncPregnancyReferral'

uses "http://hl7.org/fhir/StructureDefinition/Parameters" as source
uses "http://hl7.org/fhir/StructureDefinition/CarePlan" as target

group AncPregnancyReferral(source src : Parameters, target tgt: CarePlan) {
    src -> evaluate(src, $this.parameter.where(name='subject').resource) as subject,
            evaluate(src, $this.parameter.where(name='definition').resource) as definition,
            evaluate(subject, today()) as dueDate
            then ExtractTasks(dueDate, subject, tgt) "r_careplan";
}

group ExtractTasks(
    source dueDate: DateType,
    source subject : Patient,
    target careplan: CarePlan){

    subject -> dueDate as start,
                evaluate(subject, today() + '1 \'months\''.toQuantity()) as end,
                create('Period') as period,
                careplan.contained = create('Task') as task then {

        subject then ExtractPeriod(start, end, period) "r_task_period_extr";

        subject -> task.id = uuid(),
               task.identifier = create('Identifier') as iden, iden.value = uuid(), iden.use = 'official',
               task.status = 'ready',
               task.intent = 'plan',
               task.executionPeriod = period,
               task.priority = 'routine',
               task.description = 'Pregnancy Referral',
               task.for = create('Reference') as ref, ref.reference = evaluate(subject, $this.id.replaceMatches('/_history/.*', '')),
               task.basedOn = reference(careplan),
               task.authoredOn = evaluate(subject, now()),
               task.focus = create('Reference') as ref, ref.reference = 'PlanDefinition/738754ca-625b-4b80-bf3f-7aea219f0bde',
               task.requester = evaluate(subject, $this.generalPractitioner.first()),
               task.owner = evaluate(subject, $this.generalPractitioner.first()) "r_task_data";

        // pregnancy referral referral form
        subject -> task.reasonReference = create('Reference') as ref, ref.reference = 'Questionnaire/c75ab65d-af2e-429a-b4fe-70fe1b5078a6' "r_task_reason_ref";
    } "r_cp_acti_outcome";
}

group ExtractPeriod(source start: DateType, source end: DateType, target period: Period) {
    start -> period.start = create('dateTime') as dt,
             dt.value = evaluate(start, $this.value.substring(0,10) + 'T00:00:00.00Z') "r_per_start";

    end -> period.end = create('dateTime') as dt,
           dt.value = evaluate(end, $this.value.substring(0,10) + 'T00:00:00.00Z') "r_per_end";
}
