map "https://fhir.labs.smartregister.org/fhir/StructureMap/d65b7c69-209c-4b4b-95a4-32a968b8a21a" = "eCBIS Sick Child Registration"

uses "http://hl7.org/fhir/StructureDefinition/QuestionnaireReponse" as source
uses "http://hl7.org/fhir/StructureDefinition/Bundle" as target

group SickChild(source src : QuestionnaireResponse, target bundle: Bundle) {
    src -> bundle.type = "collection" "r_bundle_type";
    src -> evaluate(src, $this.subject) as refPatient then
        ExtractSickChildCondition(src, bundle, refPatient), ExtractObservation(src, bundle, refPatient) "r_bundle_entries";
}

group ExtractSickChildCondition(source src : QuestionnaireResponse, target bundle : Bundle, source refPatient : Reference) {
    src.item as page where(linkId = 'c39d5f0e-6410-11ed-81ce-0242ac120002') then {
        page.item as sickCheck where(linkId ='ba8ac52f-7fc2-4ab9-9e67-ee4473c57b48' and answer.value.code = 'sick') then {
            sickCheck -> bundle.entry as entry, entry.resource = create("Condition") as cnd then {
                sickCheck -> cnd.id = uuid() "r_cnd_id";
                sickCheck -> cnd.onset = evaluate(src, now()) "r_cnd_onset_date_val";
                sickCheck -> cnd.clinicalStatus = cc("http://terminology.hl7.org/CodeSystem/condition-clinical", "active") "r_cnd_clinical_st";
                sickCheck -> cnd.verificationStatus = cc("http://terminology.hl7.org/CodeSystem/condition-ver-status", "confirmed") "r_cnd_verif_st";
                sickCheck -> cnd.category = cc("http://terminology.hl7.org/CodeSystem/condition-category", "problem-list-item", "Problem List Item") "r_cnd_category";
                sickCheck -> cnd.subject = refPatient "r_cnd_sub";
                sickCheck -> cnd.recordedDate = evaluate(src, now()) "r_cnd_recorded";

                sickCheck -> cnd.code = create("CodeableConcept") as ccPreg then {
                    sickCheck -> ccPreg.coding = c("http://snomed.info/sct", "275142008", "Sick Child") as coding, coding.display = 'Sick Child' "r_cnd_code_coding";
                    sickCheck -> ccPreg.text = "Sick Child" "r_cnd_code_text";
                } "r_cnd_code";
            } "r_cnd";
       } "r_sick_check";
    } "r_page";
}

group ExtractObservation(source src : QuestionnaireResponse, target bundle : Bundle, source refPatient : Reference) {

    src.item as page where(linkId = 'e4efcd20-6408-11ed-81ce-0242ac120002') then {
        page.item as infancy_act where(linkId ='1a6b70d7-9aae-4556-8730-49d0f7094c16' and answer.value.exists() and answer.value.code = 'al:-artemether-20mg-+-lumefatrine-120mg-(1x6)-tablets(2-11-months)') then {
            page.item as given where(linkId ='74abfd30-0b1e-4671-9262-429dc3bfc031' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Strips") as qtyUnit,
                    evaluate(src, "Group/90b10fdb-592c-47b6-a265-c8806a15d77c") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_infancy_act";

        page.item as toddler_act where(linkId ='2cc8de99-3482-4348-894f-222e40dad14f' and answer.value.exists() and answer.value.code = 'al:-artemether-20mg-+-lumefatrine-120mg-(2x6)-tablets(1-5-years)') then {
            page.item as given where(linkId ='df6cbd9a-70e1-472d-8c9f-2f0e12d70dc4' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 2) as qtyValue,
                    evaluate(src, "Strips") as qtyUnit,
                    evaluate(src, "Group/dde1cd4f-bef4-4d2b-ad1b-f63b639ed254") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_toddler_act";

        page.item as artesunate where(linkId ='e57feacd-33cd-4968-8181-740d5befe347' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='fa3c1ddc-e6a8-4089-89d7-2222fdfc638d' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/592181bc-0a68-47bc-8275-ac853bba1b09") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_artesunate";

        page.item as artesunate where(linkId ='9230c34b-11cc-4c58-81b7-e091b25daf7d' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='46427f09-47d8-46f4-9470-a14a4545c210' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 2) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/592181bc-0a68-47bc-8275-ac853bba1b09") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_artesunate";

        page.item as asaq where(linkId ='1a6b70d7-9aae-4556-8730-49d0f7094c16' and answer.value.exists() and answer.value.code = 'asaq:-as-(25mg)---+---aq-(67.5mg)---(-2-11months)-tablets') then {
            page.item as given where(linkId ='1e5b769f-074c-444c-e497-50c242d4ec7e' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Strips") as qtyUnit,
                    evaluate(src, "Group/b339a63b-84db-45e8-b357-7fcce3bddc34") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_asaq";

        page.item as asaq where(linkId ='2cc8de99-3482-4348-894f-222e40dad14f' and answer.value.exists() and answer.value.code = 'asaq:-as-(50mg)-+-aq-(135mg)-(-1-5years)-tablets') then {
            page.item as given where(linkId ='0042964e-6c13-4324-9ae1-27e2ff92de28' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Strips") as qtyUnit,
                    evaluate(src, "Group/7c5c3eb6-0382-4c7b-8c2d-3abfb31d29f4") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_asaq";

        page.item as amoxicillin where(linkId ='4a035bfe-4d43-4814-88c9-476f73d729f6' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='fcbb4f5c-7120-4fa8-879b-cea44481934d' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/e50eb835-7827-4001-b233-e1dda721d4e8") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_amoxicillin";

        page.item as amoxicilin where(linkId ='0a2fdbff-f9a2-46b3-8e91-3e924ee6d7ab' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='63ec1a00-d04e-4b9b-ec92-05c64ec2c3ab' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 2) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/e50eb835-7827-4001-b233-e1dda721d4e8") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_amoxicilin";

        page.item as ors where(linkId ='410cb6b7-c486-4559-8f2d-169efd723a08' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='adcbe143-87a3-4c77-8cb1-74838b063219' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Sachets") as qtyUnit,
                    evaluate(src, "Group/6a59c142-1c87-11ed-861d-0242ac120002") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_ors";
    } "r_page";

    src.item as page where(linkId = 'abf5514a-6410-11ed-81ce-0242ac120002') then {
        page.item as malaria_infancy_act where(linkId ='c3e43a3c-d79b-41a7-95fd-d44308c38b0a' and answer.value.exists() and answer.value.code = 'al:-artemether-20mg-+-lumefatrine-120mg-(1x6)-tablets(2-11-months)') then {
            page.item as given where(linkId ='6d142ebd-c10e-4043-8bff-6ead88ce77f1' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Strips") as qtyUnit,
                    evaluate(src, "Group/90b10fdb-592c-47b6-a265-c8806a15d77c") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_malaria_infancy_act";

        page.item as malaria_act where(linkId ='76db3c8a-da61-44ee-83bf-db30038f3866' and answer.value.exists() and answer.value.code = 'al:-artemether-20mg-+-lumefatrine-120mg-(2x6)-tablets(1-5-years)') then {
            page.item as given where(linkId ='10b83409-d91b-4770-98eb-d32d41e9f774' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 2) as qtyValue,
                    evaluate(src, "Strips") as qtyUnit,
                    evaluate(src, "Group/dde1cd4f-bef4-4d2b-ad1b-f63b639ed254") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_malaria_act";

        page.item as asaq where(linkId ='c3e43a3c-d79b-41a7-95fd-d44308c38b0a' and answer.value.exists() and answer.value.code = 'asaq:-as-(25mg)---+---aq-(67.5mg)---(-2-11months)-tablets') then {
            page.item as given where(linkId ='fad4209d-74c6-45f6-e577-793211e45cb3' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Strips") as qtyUnit,
                    evaluate(src, "Group/b339a63b-84db-45e8-b357-7fcce3bddc34") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_asaq";

        page.item as asaq where(linkId ='76db3c8a-da61-44ee-83bf-db30038f3866' and answer.value.exists() and answer.value.code = 'asaq:-as-(50mg)-+-aq-(135mg)-(-1-5years)-tablets') then {
            page.item as given where(linkId ='cc2b8970-2ba5-4d7d-ed56-749e193120f8' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Strips") as qtyUnit,
                    evaluate(src, "Group/7c5c3eb6-0382-4c7b-8c2d-3abfb31d29f4") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_asaq";

        page.item as rdt where(linkId ='c337ea18-44f4-4074-8380-d871095ef446' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='14b00b90-ecd5-4936-8215-b4ed08dd750b' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Tests") as qtyUnit,
                    evaluate(src, "Group/24dcbee9-a665-4b3e-b97d-61b3ff675589") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_rdt";

        page.item as pneumonia where(linkId ='c6a971ad-8117-4ef0-88d0-1aa347b345d7' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='f04aec03-c24d-42a0-fca3-3135ea3da639' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 1) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/e50eb835-7827-4001-b233-e1dda721d4e8") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_pneumonia";

        page.item as pneumonia where(linkId ='9e4e2863-2a9e-4fe3-bcbd-2202d5c0060a' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='2c18cbd8-ff7b-42cf-86d4-7e6c04a773e8' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 2) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/e50eb835-7827-4001-b233-e1dda721d4e8") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_pneumonia";

        page.item as ors where(linkId ='f3c23ac2-d405-44dc-f462-28ac9ec30931' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='9be433bb-0aa2-4b27-876b-f58cd8d73cb3' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 3) as qtyValue,
                    evaluate(src, "Sachets") as qtyUnit,
                    evaluate(src, "Group/6a59c142-1c87-11ed-861d-0242ac120002") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_ors";

        page.item as zinc where(linkId ='f32ffc48-806f-4220-818b-c6191a363aad' and answer.value.exists() and answer.value.code = '20mg-zinc') then {
            page.item as given where(linkId ='180652dc-748b-4e09-8d58-4560dacbb55f' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 10) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/6815d390-1c8b-11ed-861d-0242ac120002") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_zinc";

        page.item as zinc where(linkId ='f32ffc48-806f-4220-818b-c6191a363aad' and answer.value.exists() and answer.value.code = '10mg-zinc') then {
            page.item as given where(linkId ='0729d96a-e2fa-492c-8187-1041eac2d9a4' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 20) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/c7f60dc4-6a48-11ed-a1eb-0242ac120002") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_zinc";

        page.item as zinc where(linkId ='6af9e739-e4b4-4b5a-a35d-093a1cef4cbe' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='e68bf830-c6f4-4196-85f3-58afa4dd8fa2' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 10) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/c7f60dc4-6a48-11ed-a1eb-0242ac120002") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_zinc";

        page.item as paracetamol where(linkId ='c3e60e46-38eb-4244-860f-a0822cb0b6a7' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='bef088be-4384-4cdc-cc5a-6469cf8f775f' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 9) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/567ec5f2-db90-4fac-b578-6e07df3f48de") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_paracetamol";

        page.item as paracetamol where(linkId ='522de694-2c29-4d26-b058-4096d924ac08' and answer.value.exists() and answer.value.code = 'yes') then {
            page.item as given where(linkId ='f3df1c61-d58d-4fa3-bf96-8a7386287274' and answer.value.exists() and answer.value.code = 'yes') then {
                src -> evaluate(src, 18) as qtyValue,
                    evaluate(src, "Tablets") as qtyUnit,
                    evaluate(src, "Group/567ec5f2-db90-4fac-b578-6e07df3f48de") as refSubject
                        then ExtractSpecificObservation(src, bundle, refPatient, refSubject, qtyValue, qtyUnit) "r_obs";
            } "r_given";
        } "r_paracetamol";
    } "r_page";

}

group ExtractSpecificObservation(source src : QuestionnaireResponse, target bundle : Bundle, source refPatient : Reference, source refSubject: String, source qtyValue: Integer, source qtyUnit: String) {

    src -> bundle.entry as entry, entry.resource = create('Observation') as obs then {
        src -> obs.id = uuid() "r_obs_id";
        src -> obs.status = 'final' "r_obs_status";
        src -> obs.category = cc('http://snomed.info/sct','386452003', 'Supply management') "r_obs_category_1";
        src -> obs.category = cc('http://hl7.org/fhir/inventoryreport-counttype', 'subtraction', 'Subtraction')"r_obs_category_2";
        src -> obs.code = create('CodeableConcept') as code then {
            src -> code.text = 'consumption' "r_obs_c_text";
        } "r_obs_code";
		src -> obs.subject = create('Reference') as ref then {
			src -> ref.reference = refSubject "r_ref_subject";
		} "r_obs_ref";
        src -> obs.effective = evaluate(src, now()) "r_effective_current_date_time";
        src -> obs.performer = evaluate(src, $this.generalPractitioner.first()) "r_obs_performer";
		src -> obs.value = create('Quantity') as qty then {
			src -> qty.value = qtyValue,
				qty.unit = qtyUnit,
				qty.system = 'http://snomed.info/sct',
				qty.code = '767525000' "r_obs_qty";
		} "r_obs_value";
    } "r_obs";

}
