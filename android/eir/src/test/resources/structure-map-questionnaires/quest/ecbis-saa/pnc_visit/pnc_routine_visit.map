map "https://fhir.labs.smartregister.org/fhir/StructureMap/0bb55b96-3b23-11ed-a261-0242ac120002" = "PNC Routine Visit"

uses "http://hl7.org/fhir/StructureDefinition/QuestionnaireReponse" as source
uses "http://hl7.org/fhir/StructureDefinition/Bundle" as target

group PNCRoutineVisit(source src : QuestionnaireResponse, target bundle: Bundle) {
    src -> bundle.type = "collection" "r_bundle_type";
    src -> evaluate(src, $this.subject) as refPatient then
        ExtractObservation(src, bundle, refPatient) "r_bundle_entries";
}

group ExtractObservation(source src : QuestionnaireResponse, target bundle : Bundle, source refPatient : Reference) {
    	src.item as item_given where(linkId='9e495bd6-6f98-4031-e7bc-d27d2c78aec4' and answer.value.code != 'none') then {
    	     src.item as item_given_count where(linkId ='48d9fb70-93b2-40e0-c44f-0502dc9e879a' and answer.value.exists() and answer.value.toInteger() > 0) then {
                src -> bundle.entry as entry, entry.resource = create('Observation') as obs then {
                    src -> obs.id = uuid() "r_obs_id";
                    src -> obs.status = 'final' "r_obs_status";
                    src -> obs.category = cc('http://snomed.info/sct','386452003', 'Supply management') "r_obs_category_1";
                    src -> obs.category = cc('http://hl7.org/fhir/inventoryreport-counttype', 'subtraction', 'Subtraction')"r_obs_category_2";
                    src -> obs.code = create('CodeableConcept') as code then {
                        src -> code.text = 'consumption' "r_obs_c_text";
                    } "r_obs_code";
                    src -> obs.subject = create('Reference') as ref then ExtractReference(src, ref) "r_obs_ref";
                    src -> obs.effective = evaluate(src, now()) "r_effective_current_date_time";
                    src -> obs.performer = evaluate(src, $this.generalPractitioner.first()) "r_obs_performer";
                    src -> obs.value = create('Quantity') as qty then {
                        src -> qty.value = evaluate(item_given_count, $this.answer.value),
                            qty.unit = 'Pieces',
                            qty.system = 'http://snomed.info/sct',
                            qty.code = '767525000' "r_obs_qty";
                    } "r_obs_value";
                } "r_obs";
            } "r_condom_given_count_check";
    	} "r_condom_given_check";
}

group ExtractReference(source src: QuestionnaireResponse, target ref: Reference) {

    src.item where(linkId = '9e495bd6-6f98-4031-e7bc-d27d2c78aec4' and answer.value.code = 'male') then {
        src -> ref.reference = 'Group/951da426-1506-4cab-b03e-5583bdf0ca76' "r_male_condom_ref";
    } "r_male_condom_type_check";
    
    src.item where(linkId = '9e495bd6-6f98-4031-e7bc-d27d2c78aec4' and answer.value.code = 'female') then {
        src -> ref.reference = 'Group/3af23539-850a-44ed-8fb1-d4999e2145ff' "r_female_condom_ref";
    } "r_female_condom_type_check";
}