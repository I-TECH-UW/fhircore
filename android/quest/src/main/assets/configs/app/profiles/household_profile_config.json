{
  "appId": "app",
  "configType": "profile",
  "id": "householdProfile",
  "fhirResource": {
    "baseResource": {
      "resource": "Group",
      "dataQueries": [
        {
          "id": "householdQueryByType",
          "filterType": "TOKEN",
          "key": "type",
          "valueType": "CODING",
          "valueCoding": {
            "system": "http://hl7.org/fhir/group-type",
            "code": "person"
          }
        },
        {
          "id": "householdQueryByCode",
          "filterType": "TOKEN",
          "key": "code",
          "valueType": "CODEABLECONCEPT",
          "valueCoding": {
            "system": "https://www.snomed.org",
            "code": "35359004"
          }
        }
      ]
    },
    "relatedResources": [
      {
        "resource": "Patient",
        "fhirPathExpression": "Group.member.entity",
        "relatedResources": [
          {
            "resource": "Condition",
            "searchParameter": "subject"
          },
          {
            "resource": "CarePlan",
            "searchParameter": "subject"
          },
          {
            "resource": "Task",
            "searchParameter": "subject"
          }
        ]
      },
      {
        "resource": "CarePlan",
        "searchParameter": "subject",
        "dataQueries": [
          {
            "id": "filterHouseholdCarePlans",
            "filterType": "TOKEN",
            "key": "_tag",
            "valueType": "CODING",
            "valueCoding": {
              "system": "https://www.snomed.org",
              "code": "35359004"
            }
          }
        ]
      }
    ]
  },
  "managingEntity": {
    "infoFhirPathExpression": "Patient.name.given",
    "fhirPathResource": {
      "resourceType": "Patient",
      "fhirPathExpression": "Patient.active and (Patient.birthDate <= today() - 5 'years')"
    },
    "dialogTitle": "{{ assign.new.family.head }}",
    "dialogWarningMessage": "{{ abort.operation.question }}",
    "dialogContentMessage": "{{ select.new.family.head }}"
  },
  "fabActions": [
    {
      "id": "ActionButton",
      "visible": true,
      "display": "{{ add.member }}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "e5155788-8831-4916-a3f5-486915ce34b2",
            "title": "Add household member",
            "saveButtonText": "Add Member",
            "groupResource": {
              "groupIdentifier": "@{familyLogicalId}",
              "memberResourceType": "Patient"
            },
            "planDefinitions": [
              "9fac39bd-9750-4c1d-b355-1961de4e37f3"
            ]
          }
        }
      ]
    }
  ],
  "rules": [
    {
      "name": "familyName",
      "condition": "true",
      "actions": [
        "data.put('familyName', fhirPath.extractValue(Group, 'Group.name'))"
      ]
    },
    {
      "name": "familyId",
      "condition": "true",
      "actions": [
        "data.put('familyId', fhirPath.extractValue(Group, 'Group.identifier[0].value'))"
      ]
    },
    {
      "name": "familyLogicalId",
      "condition": "true",
      "actions": [
        "data.put('familyLogicalId', fhirPath.extractValue(Group, 'Group.id'))"
      ]
    }
  ],
  "views": [
    {
      "viewType": "COLUMN",
      "children": [
        {
          "viewType": "COLUMN",
          "backgroundColor": "primaryColor",
          "padding": 8,
          "children": [
            {
              "viewType": "COMPOUND_TEXT",
              "primaryText": "@{familyName} Family",
              "primaryTextColor": "#FFFFFF",
              "fontSize": 20.0
            },
            {
              "viewType": "COMPOUND_TEXT",
              "primaryText": "ID: @{familyId}",
              "primaryTextColor": "#FFFFFF",
              "fontSize": 20.0
            }
          ]
        },
        {
          "viewType": "CARD",
          "header": {
            "viewType": "COMPOUND_TEXT",
            "primaryText": "HOUSEHOLD MEMBERS",
            "primaryTextColor": "#6F7274",
            "fontSize": 18.0,
            "padding": 16
          },
          "content": [
            {
              "viewType": "LIST",
              "baseResource": "Patient",
              "relatedResources": [
                {
                  "resourceType": "CarePlan",
                  "fhirPathExpression": "CarePlan.subject.reference"
                },
                {
                  "resourceType": "Condition",
                  "fhirPathExpression": "Condition.subject.reference"
                },
                {
                  "resourceType": "Task",
                  "fhirPathExpression": "Task.for.reference"
                }
              ],
              "registerCard": {
                "rules": [
                  {
                    "name": "patientFirstName",
                    "condition": "true",
                    "actions": [
                      "data.put('patientFirstName', fhirPath.extractValue(Patient, \"Patient.name[0].select(given[0])\"))"
                    ]
                  },
                  {
                    "name": "patientMiddleName",
                    "condition": "true",
                    "actions": [
                      "data.put('patientMiddleName', fhirPath.extractValue(Patient, \"Patient.name[0].select(text)\"))"
                    ]
                  },
                  {
                    "name": "patientLastName",
                    "condition": "true",
                    "actions": [
                      "data.put('patientLastName', fhirPath.extractValue(Patient, \"Patient.name[0].select(family)\"))"
                    ]
                  },
                  {
                    "name": "patientAge",
                    "condition": "true",
                    "actions": [
                      "data.put('patientAge', service.extractAge(Patient))"
                    ]
                  },
                  {
                    "name": "patientGender",
                    "condition": "true",
                    "actions": [
                      "data.put('patientGender', service.extractGender(Patient))"
                    ]
                  },
                  {
                    "name": "patientName",
                    "condition": "true",
                    "actions": [
                      "data.put('patientName', data.get('patientFirstName') + ' ' + data.get('patientMiddleName') + ' ' + data.get('patientLastName') + ' , ' + (data.get('patientGender') == 'Female'? 'F': data.get('patientGender') == 'Male'? 'M': data.get('patientGender')) + ' , ' +  data.get('patientAge'))"
                    ]
                  },
                  {
                    "name": "patientLogicalId",
                    "condition": "true",
                    "actions": [
                      "data.put('patientLogicalId', fhirPath.extractValue(Patient, 'Patient.id'))"
                    ]
                  },
                  {
                    "name": "serviceStatus",
                    "condition": "true",
                    "actions": [
                      "data.put('serviceStatus',  service.evaluateToBoolean(Task, \"Task.status = 'ready' \", false) ? 'DUE' : 'UPCOMING')"
                    ]
                  },
                  {
                    "name": "taskDescription",
                    "condition": "true",
                    "actions": [
                      "data.put('taskDescription', fhirPath.extractValue(size(Task) > 0 ? Task.get(0) : null, 'Task.description'))"
                    ]
                  },
                  {
                    "name": "taskId",
                    "condition": "true",
                    "actions": [
                      "data.put('taskId', fhirPath.extractValue(size(Task) > 0 ? Task.get(0) : null, 'Task.id'))"
                    ]
                  },
                  {
                    "name": "taskFor",
                    "condition": "true",
                    "actions": [
                      "data.put('taskFor', fhirPath.extractValue(size(Task) > 0 ? Task.get(0) : null, 'Task.for.reference'))"
                    ]
                  },
                  {
                    "name": "taskQuestionnaireId",
                    "condition": "true",
                    "actions": [
                      "data.put('taskQuestionnaireId', fhirPath.extractValue(size(Task) > 0 ? Task.get(0) : null, 'Task.reasonReference.reference'))"
                    ]
                  },
                  {
                    "name": "showMemberTasks",
                    "condition": "true",
                    "actions": [
                      "data.put('showMemberTasks', size(Task) > 0)"
                    ]
                  },
                  {
                    "name": "serviceMemberIcons",
                    "condition": "true",
                    "actions": [
                      "data.put('serviceMemberIcons', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate >= today() - 5 'years')\") == 'true'? 'CHILD': fhirPath.extractValue(Condition, \"Condition.code.text = 'Pregnant'\") == 'true'? 'PREGNANT_WOMAN': '')"
                    ]
                  },
                  {
                    "name": "statuses",
                    "condition": "true",
                    "actions": [
                      "data.put('statuses', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate >= today() - 5 'years')\") == 'true'? '': fhirPath.extractValue(Condition, \"Condition.code.text = 'Pregnant'\") == 'true'? 'Pregnant': fhirPath.extractValue(Condition, \"Condition.code.text = 'Family Planning'\") == 'true'? 'Family Planning': '')"
                    ]
                  }
                ],
                "views": [
                  {
                    "viewType": "SERVICE_CARD",
                    "details": [
                      {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{patientName}",
                        "primaryTextColor": "#000000"
                      },
                      {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{statuses}",
                        "primaryTextColor": "#939596"
                      }
                    ],
                    "serviceMemberIcons": "@{serviceMemberIcons}",
                    "serviceButton": {
                      "visible": "@{showMemberTasks}",
                      "text": "@{taskDescription}",
                      "status": "@{serviceStatus}",
                      "smallSized": true,
                      "actions": [
                        {
                          "trigger": "ON_CLICK",
                          "workflow": "LAUNCH_QUESTIONNAIRE",
                          "questionnaire": {
                            "id": "@{taskQuestionnaireId}",
                            "title": "@{taskDescription}",
                            "saveButtonText": "Save",
                            "taskId": "@{taskId}",
                            "resourceIdentifier": "@{taskFor}"
                          }
                        }
                      ]
                    },
                    "actions": [
                      {
                        "trigger": "ON_CLICK",
                        "workflow": "LAUNCH_PROFILE",
                        "id": "defaultProfile",
                        "params": [
                          {
                            "key": "familyLogicalId",
                            "value": "@{familyLogicalId}"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "overFlowMenuItems": [
    {
      "title": "Family details",
      "titleColor": "#000000",
      "visible": "true",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "f210a832-857f-49e6-93f5-399eec4f4edb",
            "title": "{{add.family}}",
            "saveButtonText": "Update household details",
            "setPractitionerDetails": true,
            "setOrganizationDetails": true,
            "type": "EDIT",
            "resourceIdentifier": "@{familyLogicalId}"
          }
        }
      ]
    },
    {
      "title": "Change family head",
      "titleColor": "#000000",
      "visible": "true",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "CHANGE_MANAGING_ENTITY"
        }
      ]
    },
    {
      "title": "Remove family",
      "titleColor": "#FF0000",
      "visible": "true",
      "showSeparator": "true",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "params": [
            {
              "key": "familyId",
              "value": "@{familyLogicalId}"
            },
            {
              "key": "familyName",
              "value": "@{familyName}"
            }
          ],
          "questionnaire": {
            "id": "0259e181-581e-4b4c-8409-e3be3a166ef5",
            "title": "Remove Household",
            "groupResource": {
              "groupIdentifier": "@{familyLogicalId}",
              "memberResourceType": "Patient",
              "removeGroup": true
            },
            "confirmationDialog": {
              "title": "Remove household",
              "message": "Removing @{familyName} will remove their entire health record from your device. This action can’t be undone.",
              "actionButtonText": "Remove household"
            }
          }
        }
      ]
    }
  ]
}