{
  "appId": "app",
  "configType": "profile",
  "id": "defaultProfile",
  "fhirResource": {
    "baseResource": {
      "resource": "Patient"
    },
    "relatedResources": [
      {
        "resource": "Condition",
        "searchParameter": "subject"
      },
      {
        "resource": "CarePlan",
        "searchParameter": "subject"
      },
      {
        "id": "availableTasks",
        "resource": "Task",
        "searchParameter": "subject",
        "sortConfigs": [
          {
            "paramName": "period",
            "dataType": "DATE"
          }
        ]
      },
      {
        "id": "totalEncounters",
        "resource": "Encounter",
        "searchParameter": "subject"
      },
      {
        "id": "totalObservations",
        "resource": "Observation",
        "searchParameter": "subject"
      }
    ]
  },
  "topAppBar": {
    "title": {
      "viewType": "COMPOUND_TEXT",
      "primaryText": "@{patientName} profile",
      "primaryTextColor": "#FFFFFF",
      "fontSize": 16.0,
      "maxLines": 1,
      "primaryTextFontWeight": "BOLD"
    },
    "content": [
      {
        "viewType": "ROW",
        "alignment": "START",
        "children": [
          {
            "viewType": "SPACER",
            "width": 10
          },
          {
            "viewType": "IMAGE_VIEW",
            "width": 80,
            "height": 80,
            "reference": "@{patientProfileIcon}"
          },
          {
            "viewType": "SPACER",
            "width": 10
          },
          {
            "viewType": "COLUMN",
            "backgroundColor": "primaryColor",
            "children": [
              {
                "viewType": "ROW",
                "children": [
                  {
                    "viewType": "COMPOUND_TEXT",
                    "primaryText": "Name: ",
                    "primaryTextColor": "#FFFFFF",
                    "primaryTextFontWeight": "BOLD"
                  },
                  {
                    "viewType": "COMPOUND_TEXT",
                    "primaryText": "@{patientName}",
                    "primaryTextColor": "#FFFFFF"
                  }
                ]
              },
              {
                "viewType": "ROW",
                "children": [
                  {
                    "viewType": "COMPOUND_TEXT",
                    "primaryText": "ID: ",
                    "primaryTextColor": "#FFFFFF",
                    "primaryTextFontWeight": "BOLD"
                  },
                  {
                    "viewType": "COMPOUND_TEXT",
                    "primaryText": "#@{patientIdentifier}",
                    "primaryTextColor": "#FFFFFF"
                  }
                ]
              },
              {
                "viewType": "ROW",
                "children": [
                  {
                    "viewType": "COMPOUND_TEXT",
                    "primaryText": "Sex: ",
                    "primaryTextColor": "#FFFFFF",
                    "primaryTextFontWeight": "BOLD"
                  },
                  {
                    "viewType": "COMPOUND_TEXT",
                    "primaryText": "@{patientGender}",
                    "primaryTextColor": "#FFFFFF"
                  }
                ]
              },
              {
                "viewType": "ROW",
                "children": [
                  {
                    "viewType": "COMPOUND_TEXT",
                    "primaryText": "Age: ",
                    "primaryTextColor": "#FFFFFF",
                    "primaryTextFontWeight": "BOLD"
                  },
                  {
                    "viewType": "COMPOUND_TEXT",
                    "primaryText": "@{patientAge}",
                    "primaryTextColor": "#FFFFFF"
                  }
                ]
              },
              {
                "viewType": "ROW",
                "children": [
                  {
                    "viewType": "COMPOUND_TEXT",
                    "primaryText": "DOB: ",
                    "primaryTextColor": "#FFFFFF",
                    "primaryTextFontWeight": "BOLD"
                  },
                  {
                    "viewType": "COMPOUND_TEXT",
                    "primaryText": "@{patientDOB}",
                    "primaryTextColor": "#FFFFFF"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "collapsible": false
  },
  "rules": [
    {
      "name": "totalTaskCount",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('totalTaskCount', size(Task))"
      ]
    },
    {
      "name": "totalEncounterCount",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('totalEncounterCount', size(totalEncounters))"
      ]
    },
    {
      "name": "totalObservationCount",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('totalObservationCount', size(totalObservations))"
      ]
    },
    {
      "name": "totalConditionCount",
      "condition": "true",
      "actions": [
        "data.put('totalObservationCount', size(Condition))"
      ]
    },
    {
      "name": "activeConditions",
      "condition": "true",
      "actions": [
        "data.put('activeConditions', service.filterResources(Condition, \"Condition.clinicalStatus.coding.code = 'active'\"))"
      ]
    },
    {
      "name": "patientFirstName",
      "condition": "true",
      "actions": [
        "data.put('patientFirstName', fhirPath.extractValue(Patient, \"Patient.name[0].select(given[0])\"))"
      ]
    },
    {
      "name": "patientMiddleName",
      "condition": "true",
      "actions": [
        "data.put('patientMiddleName', fhirPath.extractValue(Patient, \"Patient.name[0].select(text)\"))"
      ]
    },
    {
      "name": "patientLastName",
      "condition": "true",
      "actions": [
        "data.put('patientLastName', fhirPath.extractValue(Patient, \"Patient.name[0].select(family)\"))"
      ]
    },
    {
      "name": "patientName",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('patientName', data.get('patientFirstName') + ' ' + data.get('patientMiddleName') + ' ' + data.get('patientLastName'))"
      ]
    },
    {
      "name": "patientActive",
      "condition": "true",
      "actions": [
        "data.put('patientActive', fhirPath.extractValue(Patient, 'Patient.active'))"
      ]
    },
    {
      "name": "patientTextColor",
      "condition": "true",
      "actions": [
        "data.put('patientTextColor', Patient.active ? '#000000' : 'DefaultColor')"
      ]
    },
    {
      "name": "patientIdentifier",
      "condition": "true",
      "actions": [
        "data.put('patientIdentifier', fhirPath.extractValue(Patient, 'Patient.identifier[0].value'))"
      ]
    },
    {
      "name": "patientId",
      "condition": "true",
      "actions": [
        "data.put('patientId', fhirPath.extractValue(Patient, 'Patient.id'))"
      ]
    },
    {
      "name": "patientAge",
      "condition": "true",
      "actions": [
        "data.put('patientAge', service.extractAge(Patient))"
      ]
    },
    {
      "name": "childCardVisible",
      "condition": "true",
      "actions": [
        "data.put('childCardVisible', data.get('patientAge') == 'true' && data.get('patientAge')<=5)"
      ]
    },
    {
      "name": "patientGender",
      "condition": "true",
      "actions": [
        "data.put('patientGender', service.extractGender(Patient))"
      ]
    },
    {
      "name": "patientHeight",
      "condition": "true",
      "priority": 3,
      "actions": [
        "data.put('patientHeight', fhirPath.extractValue(service.filterResources(totalObservations, \"Observation.code.coding.code = '1153637007' \").get(0), \"Observation.value\"))"
      ]
    },
    {
      "name": "noOfBracAncVisit",
      "condition": "true",
      "priority": 3,
      "actions": [
        "data.put('noOfBracAncVisit', size(service.filterResources(totalEncounters, \"Encounter.type[0].coding.code = 'anc-contact-in-brac' \")))"
      ]
    },
    {
      "name": "bracPncVisits",
      "condition": "true",
      "actions": [
        "data.put('bracPncVisits', service.filterResources(totalEncounters, \"Encounter.type[0].coding.code = 'pnc-contact-in-brac' \"))"
      ]
    },
    {
      "name": "noOfBracPncVisit",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('noOfBracPncVisit', size(data.get('bracPncVisits')))"
      ]
    },
    {
      "name": "isLastPncVisitPast24Hours",
      "condition": "true",
      "priority": 3,
      "actions": [
        "data.put('isLastPncVisitPast24Hours', data.get('noOfBracPncVisit') > 0 ? fhirPath.extractValue(service.filterResources(totalEncounters, \"Encounter.type[0].coding.code = 'pnc-contact-in-brac' \").get(0), \"Encounter.period.start < now() - 24 'hours'\") : true)"
      ]
    },
    {
      "name": "patientMaritalStatus",
      "condition": "true",
      "actions": [
        "data.put('patientMaritalStatus', service.extractMaritalStatus(Patient))"
      ]
    },
    {
      "name": "isMarried",
      "condition": "true",
      "actions": [
        "data.put('isMarried', data.get('patientMaritalStatus') == 'M')"
      ]
    },
    {
      "name": "patientDOB",
      "condition": "true",
      "actions": [
        "data.put('patientDOB', service.extractDOB(Patient, 'dd MM yyyy'))"
      ]
    },
    {
      "name": "isChild",
      "condition": "true",
      "actions": [
        "data.put('isChild', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate >= today() - 5 'years')\"))"
      ]
    },
    {
      "name": "canBearChild",
      "condition": "true",
      "actions": [
        "data.put('canBearChild',  fhirPath.extractValue(Patient, \"Patient.active and Patient.gender = 'female' and ((Patient.birthDate <= today() - 14 'years') and (Patient.birthDate >= today() - 49 'years'))\"))"
      ]
    },
    {
      "name": "isEligibleForFP",
      "condition": "true",
      "actions": [
        "data.put('isEligibleForFP',  fhirPath.extractValue(Patient, \"Patient.active and ((Patient.birthDate <= today() - 14 'years') and (Patient.birthDate >= today() - 49 'years'))\"))"
      ]
    },
    {
      "name": "isPregnant",
      "condition": "true",
      "actions": [
        "data.put('isPregnant', service.evaluateToBoolean(Condition, \"Condition.code.text = 'Pregnant' \", false))"
      ]
    },
    {
      "name": "lmpDate",
      "condition": "true",
      "actions": [
        "data.put('lmpDate', fhirPath.extractValue(service.filterResources(Condition, \"Condition.code.text = 'Pregnant' \").get(0), \"Condition.onset\"))"
      ]
    },
    {
      "name": "activeDeliveryDate",
      "condition": "true",
      "actions": [
        "data.put('activeDeliveryDate', fhirPath.extractValue(service.filterResources(Condition, 'Condition.code.coding.code=\"234234234\"').get(0), \"Condition.onset\"))"
      ]
    },
    {
      "name": "pregnancyOutcomeDateCompleted",
      "condition": "true",
      "actions": [
        "data.put('pregnancyOutcomeDateCompleted', fhirPath.extractValue(service.filterResources(Condition, 'Condition.code.coding.code=\"234234234\"').get(0), \"Condition.onset <= (today() - 42 'days')\"))"
      ]
    },
    {
      "name": "isActivePnc",
      "condition": "true",
      "actions": [
        "data.put('isActivePnc', service.evaluateToBoolean(Condition, \"Condition.code.text = 'PNC' \", false))"
      ]
    },
    {
      "name": "canRegisterPregnancy",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('canRegisterPregnancy', data.get('isMarried') and data.get('canBearChild') && !data.get('isPregnant') && (!data.get('isActivePnc') || data.get('pregnancyOutcomeDateCompleted')))"
      ]
    },
    {
      "name": "canOutcomePregnancy",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('canOutcomePregnancy', data.get('isPregnant') && !data.get('isActivePnc'))"
      ]
    },
    {
      "name": "patientProfileIcon",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('patientProfileIcon', data.get('isChild') ? 'ic_kids' : data.get('isActivePnc') ? 'ic_baby_mother' : data.get('isPregnant') ? 'ic_pregnant' : 'ic_profile')"
      ]
    },
    {
      "name": "canEnrollToFp",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('canEnrollToFp', data.get('isEligibleForFP') && !data.get('isPregnant'))"
      ]
    },
    {
      "name": "isChildUnder2months",
      "condition": "true",
      "actions": [
        "data.put('isChildUnder2months', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate > today() - 2 'months')\"))"
      ]
    },
    {
      "name": "isChildOver2months",
      "condition": "true",
      "actions": [
        "data.put('isChildOver2months', fhirPath.extractValue(Patient, \"Patient.active and ((Patient.birthDate <= today() - 2 'months') and (Patient.birthDate >= today() - 5 'years'))\"))"
      ]
    },
    {
      "name": "latestObservations",
      "condition": "true",
      "actions": [
        "data.put('latestObservations', service.filterResources(stockObservations, \"Observation.status = 'preliminary'\"))"
      ]
    },
    {
      "name": "activeFlags",
      "condition": "true",
      "actions": [
        "data.put('activeFlags', service.filterResources(stockOutFlags, \"Flag.status = 'active'\"))"
      ]
    },
    {
      "name": "applicableForAdolescentPackage",
      "condition": "true",
      "actions": [
        "data.put('applicableForAdolescentPackage',  fhirPath.extractValue(Patient, \"Patient.active and Patient.gender = 'female' and (Patient.birthDate <= today() - 10 'years') and (Patient.birthDate >= today() - 19 'years')\"))"
      ]
    },
    {
      "name": "applicableForWomenPackage",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('applicableForWomenPackage',  data.get('canBearChild') && !data.get('isPregnant'))"
      ]
    },
    {
      "name": "applicableForChildPackage",
      "condition": "true",
      "actions": [
        "data.put('applicableForChildPackage', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate <= today() - 181 'days') and (Patient.birthDate >= today() - 731 'days')\"))"
      ]
    },
    {
      "name": "applicableForEncPackage",
      "condition": "true",
      "actions": [
        "data.put('applicableForEncPackage', fhirPath.extractValue(Patient, \"Patient.active and Patient.birthDate >= today() - 41 'days'\"))"
      ]
    },
    {
      "name": "applicableForNCDPackage",
      "condition": "true",
      "actions": [
        "data.put('applicableForNCDPackage', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate <= today() - 18 'years') and (Patient.birthDate >= today() - 50 'years')\"))"
      ]
    },
    {
      "name": "applicableForWomenReferral",
      "condition": "true",
      "actions": [
        "data.put('applicableForWomenReferral', fhirPath.extractValue(Patient, \"Patient.active and Patient.gender = 'female' and (Patient.birthDate < today() - 5 'years')\"))"
      ]
    },
    {
      "name": "applicableForMemberReferral",
      "condition": "true",
      "actions": [
        "data.put('applicableForMemberReferral', fhirPath.extractValue(Patient, \"Patient.active and Patient.gender != 'female' and (Patient.birthDate < today() - 5 'years')\"))"
      ]
    },
    {
      "name": "fpConditionId",
      "condition": "true",
      "actions": [
        "data.put('fpConditionId', (service.filterResources(data.get('activeConditions'), \"Condition.code.coding.code = '99998888'\")).get(0).idElement.idPart)"
      ]
    },
    {
      "name": "ancConditionId",
      "condition": "true",
      "actions": [
        "data.put('ancConditionId', (service.filterResources(data.get('activeConditions'), \"Condition.code.coding.code = '77386006'\")).get(0).idElement.idPart)"
      ]
    },
    {
      "name": "pncFollowupTaskName",
      "condition": "true",
      "priority": 4,
      "actions": [
        "data.put('pncFollowupTaskName', (data.get('noOfBracPncVisit') == 0 ? '1st' : data.get('noOfBracPncVisit') == 1 ? '2nd' : data.get('noOfBracPncVisit') == 2 ? '3rd' : '4th') + ' PNC Follow Up Visit')"
      ]
    },
    {
      "name": "applicableForPncFollowup",
      "condition": "true",
      "priority": 4,
      "actions": [
        "data.put('applicableForPncFollowup', data.get('isActivePnc') and data.get('noOfBracPncVisit') < 4 and data.get('isLastPncVisitPast24Hours'))"
      ]
    }
  ],
  "tabBar": {
    "viewType": "TABS",
    "contentScrollable": "true",
    "contentPadding": 0,
    "tabs": [
      "বাকি",
      "অন্যান্য সেবা",
      "পূর্বের তথ্য"
    ],
    "tabIndicatorColor": "#FFFF00",
    "tabContents": [
      {
        "viewType": "COLUMN",
        "padding": 16,
        "children": [
          {
            "viewType": "CARD",
            "content": [
              {
                "viewType": "BUTTON",
                "smallSized": "true",
                "text": "Referral Visit",
                "status": "DUE",
                "visible": "@{isChild}",
                "enabled": "@{patientActive}",
                "startIcon": {
                  "reference": "ic_kids"
                },
                "actions": [
                  {
                    "trigger": "ON_CLICK",
                    "workflow": "LAUNCH_QUESTIONNAIRE",
                    "questionnaire": {
                      "id": "4236",
                      "title": "Referral Visit",
                      "saveButtonText": "Save",
                      "resourceType": "Patient",
                      "resourceIdentifier": "@{patientId}"
                    }
                  }
                ]
              },
              {
                "viewType": "BUTTON",
                "smallSized": "true",
                "text": "Referral Visit",
                "status": "DUE",
                "visible": "@{applicableForWomenReferral}",
                "enabled": "@{patientActive}",
                "startIcon": {
                  "reference": "ic_women"
                },
                "actions": [
                  {
                    "trigger": "ON_CLICK",
                    "workflow": "LAUNCH_QUESTIONNAIRE",
                    "questionnaire": {
                      "id": "4237",
                      "title": "Referral Visit",
                      "saveButtonText": "Save",
                      "resourceType": "Patient",
                      "resourceIdentifier": "@{patientId}"
                    }
                  }
                ]
              },
              {
                "viewType": "BUTTON",
                "smallSized": "true",
                "text": "Referral Visit",
                "status": "DUE",
                "visible": "@{applicableForMemberReferral}",
                "enabled": "@{patientActive}",
                "startIcon": {
                  "reference": "ic_profile"
                },
                "actions": [
                  {
                    "trigger": "ON_CLICK",
                    "workflow": "LAUNCH_QUESTIONNAIRE",
                    "questionnaire": {
                      "id": "4238",
                      "title": "Referral Visit",
                      "saveButtonText": "Save",
                      "resourceType": "Patient",
                      "resourceIdentifier": "@{patientId}"
                    }
                  }
                ]
              },
              {
                "viewType": "BUTTON",
                "smallSized": "true",
                "text": "@{pncFollowupTaskName}",
                "status": "DUE",
                "visible": "@{applicableForPncFollowup}",
                "enabled": "@{patientActive}",
                "startIcon": {
                  "reference": "ic_baby_mother"
                },
                "actions": [
                  {
                    "trigger": "ON_CLICK",
                    "workflow": "LAUNCH_QUESTIONNAIRE",
                    "questionnaire": {
                      "id": "6058",
                      "title": "@{pncFollowupTaskName}",
                      "saveButtonText": "Save",
                      "resourceType": "Patient",
                      "resourceIdentifier": "@{patientId}"
                    },
                    "params": [
                      {
                        "paramType": "PREPOPULATE",
                        "linkId": "54777657-5ff3-44d6-fe0d-317cce261588",
                        "dataType": "STRING",
                        "key": "pncFollowupTaskName",
                        "value": "@{pncFollowupTaskName}"
                      },
                      {
                        "paramType": "PREPOPULATE",
                        "linkId": "bd4dba60-545c-4946-88c2-29c85f9bdf7e",
                        "dataType": "DATETIME",
                        "key": "activeDeliveryDate",
                        "value": "@{activeDeliveryDate}"
                      },
                      {
                        "paramType": "PREPOPULATE",
                        "linkId": "6d331134-5e5d-47eb-c828-22d5927c67ba",
                        "dataType": "INTEGER",
                        "key": "noOfBracPncVisit",
                        "value": "@{noOfBracPncVisit}"
                      }
                    ]
                  }
                ]
              },
              {
                "viewType": "BUTTON",
                "smallSized": "true",
                "text": "Eligible Couple Visit",
                "status": "DUE",
                "visible": "@{canRegisterPregnancy}",
                "enabled": "@{patientActive}",
                "startIcon": {
                  "reference": "ic_family_planning"
                },
                "actions": [
                  {
                    "trigger": "ON_CLICK",
                    "workflow": "LAUNCH_QUESTIONNAIRE",
                    "questionnaire": {
                      "id": "6483",
                      "title": "Eligible Couple Visit",
                      "saveButtonText": "Save",
                      "resourceType": "Patient",
                      "resourceIdentifier": "@{patientId}"
                    }
                  }
                ]
              },
              {
                "viewType": "LIST",
                "id": "readyTasksList",
                "resources": [
                  {
                    "id": "availableReadyTasks",
                    "relatedResourceId": "availableTasks",
                    "resourceType": "Task",
                    "conditionalFhirPathExpression": "((Task.status = 'ready' or Task.status = 'failed') and (Task.code.empty()))"
                  }
                ],
                "registerCard": {
                  "rules": [
                    {
                      "name": "taskStatus",
                      "condition": "true",
                      "actions": [
                        "data.put('taskStatus', fhirPath.extractValue(Task, 'Task.status'))"
                      ]
                    },
                    {
                      "name": "taskStatusColorCode",
                      "condition": "true",
                      "actions": [
                        "data.put('taskStatusColorCode', data.get('taskStatus').equals('ready') ? 'DUE' : data.get('taskStatus').equals('failed') || data.get('taskStatus').equals('cancelled') ? 'OVERDUE' : data.get('taskStatus').equals('requested') ? 'UPCOMING' : data.get('taskStatus').equals('completed') ? 'COMPLETED' : 'UPCOMING')"
                      ]
                    },
                    {
                      "name": "taskExecutionStartDate",
                      "condition": "true",
                      "actions": [
                        "data.put('taskExecutionStartDate', fhirPath.extractValue(Task, 'Task.executionPeriod.start'))"
                      ]
                    },
                    {
                      "name": "taskScheduleDate",
                      "condition": "true",
                      "actions": [
                        "data.put('taskScheduleDate', service.formatDate(data.get('taskExecutionStartDate'), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd\"))"
                      ]
                    },
                    {
                      "name": "taskPeriodDueDate",
                      "condition": "true",
                      "actions": [
                        "data.put('taskPeriodDueDate', service.formatDate(data.get('taskExecutionStartDate'), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"dd MMM yyyy\"))"
                      ]
                    },
                    {
                      "name": "taskDescription",
                      "condition": "true",
                      "actions": [
                        "data.put('taskDescription', fhirPath.extractValue(Task, 'Task.description'))"
                      ]
                    },
                    {
                      "name": "taskReasonCode",
                      "condition": "true",
                      "actions": [
                        "data.put('taskReasonCode', fhirPath.extractValue(Task, 'Task.input[0].value.coding.code'))"
                      ]
                    },
                    {
                      "name": "taskReasonDisplay",
                      "condition": "true",
                      "actions": [
                        "data.put('taskReasonDisplay', fhirPath.extractValue(Task, 'Task.input[0].value.coding.display'))"
                      ]
                    },
                    {
                      "name": "taskDescriptionWithReason",
                      "condition": "true",
                      "priority": 2,
                      "actions": [
                        "data.put('taskDescriptionWithReason', data.get('taskDescription') + ((data.get('taskReasonDisplay') != null && data.get('taskReasonDisplay') != '') ? ('(' + data.get('taskReasonDisplay') + ')') : ''))"
                      ]
                    },
                    {
                      "name": "taskDescriptionWithStartDate",
                      "condition": "true",
                      "priority": 3,
                      "actions": [
                        "data.put('taskDescriptionWithStartDate', data.get('taskDescriptionWithReason') + ' ' + 'due on' + ' ' + data.get('taskPeriodDueDate'))"
                      ]
                    },
                    {
                      "name": "taskId",
                      "condition": "true",
                      "actions": [
                        "data.put('taskId', fhirPath.extractValue(Task, 'Task.id'))"
                      ]
                    },
                    {
                      "name": "taskFor",
                      "condition": "true",
                      "actions": [
                        "data.put('taskFor', fhirPath.extractValue(Task, 'Task.for.reference'))"
                      ]
                    },
                    {
                      "name": "taskQuestionnaireId",
                      "condition": "true",
                      "actions": [
                        "data.put('taskQuestionnaireId', fhirPath.extractValue(Task, 'Task.reasonReference.reference'))"
                      ]
                    }
                  ],
                  "views": [
                    {
                      "viewType": "BUTTON",
                      "smallSized": "true",
                      "text": "@{taskDescriptionWithStartDate}",
                      "status": "@{taskStatusColorCode}",
                      "visible": "true",
                      "enabled": "@{patientActive}",
                      "actions": [
                        {
                          "trigger": "ON_CLICK",
                          "workflow": "LAUNCH_QUESTIONNAIRE",
                          "questionnaire": {
                            "id": "@{taskQuestionnaireId}",
                            "title": "@{taskDescription}",
                            "saveButtonText": "Save",
                            "taskId": "@{taskId}",
                            "resourceIdentifier": "@{taskFor}"
                          },
                          "params": [
                            {
                              "paramType": "PREPOPULATE",
                              "linkId": "ae2f17cb-deff-48a6-8ece-27e6bd475f30",
                              "dataType": "DATE",
                              "key": "taskScheduleDate",
                              "value": "@{taskScheduleDate}"
                            },
                            {
                              "paramType": "PREPOPULATE",
                              "linkId": "c706016d-b8e9-44c7-9acb-155bb4e6092c",
                              "dataType": "STRING",
                              "key": "taskReasonDisplay",
                              "value": "@{taskReasonDisplay}"
                            },
                            {
                              "paramType": "PREPOPULATE",
                              "linkId": "bb2b5f1d-3aee-4d19-883a-f5a65b349f5f",
                              "dataType": "DATE",
                              "key": "lmpDate",
                              "value": "@{lmpDate}"
                            },
                            {
                              "paramType": "PREPOPULATE",
                              "linkId": "93ff6669-bbee-47fd-e54d-8c9e9cda1f94",
                              "dataType": "INTEGER",
                              "key": "noOfBracAncVisit",
                              "value": "@{noOfBracAncVisit}"
                            },
                            {
                              "paramType": "PREPOPULATE",
                              "linkId": "5d8ac884-da47-4ec3-f077-1dd9812d0d43",
                              "dataType": "INTEGER",
                              "key": "patientHeight",
                              "value": "@{patientHeight}"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      {
        "id": "otherServices",
        "viewType": "COLUMN",
        "padding": 16,
        "children": [
          {
            "viewType": "CARD",
            "content": [
              {
                "viewType": "COLUMN",
                "id": "otherServices",
                "children": [
                  {
                    "viewType": "BUTTON",
                    "smallSized": "true",
                    "text": "Eye Facility Service",
                    "status": "DUE",
                    "visible": "true",
                    "enabled": "@{patientActive}",
                    "startIcon": {
                      "reference": "ic_eye"
                    },
                    "actions": [
                      {
                        "trigger": "ON_CLICK",
                        "workflow": "LAUNCH_QUESTIONNAIRE",
                        "questionnaire": {
                          "id": "4966",
                          "title": "Eye Facility Service",
                          "saveButtonText": "Save",
                          "resourceType": "Patient",
                          "resourceIdentifier": "@{patientId}"
                        }
                      }
                    ]
                  },
                  {
                    "viewType": "BUTTON",
                    "smallSized": "true",
                    "text": "NCD Facility Service",
                    "status": "DUE",
                    "visible": "@{applicableForNCDPackage}",
                    "enabled": "@{patientActive}",
                    "startIcon": {
                      "reference": "ic_non_communicable_disease"
                    },
                    "actions": [
                      {
                        "trigger": "ON_CLICK",
                        "workflow": "LAUNCH_QUESTIONNAIRE",
                        "questionnaire": {
                          "id": "4968",
                          "title": "NCD Facility Service",
                          "saveButtonText": "Save",
                          "resourceType": "Patient",
                          "resourceIdentifier": "@{patientId}"
                        }
                      }
                    ]
                  },
                  {
                    "viewType": "BUTTON",
                    "smallSized": "true",
                    "text": "Adolescent Facility Service",
                    "status": "DUE",
                    "visible": "@{applicableForAdolescentPackage}",
                    "enabled": "@{patientActive}",
                    "startIcon": {
                      "reference": "ic_adolescent"
                    },
                    "actions": [
                      {
                        "trigger": "ON_CLICK",
                        "workflow": "LAUNCH_QUESTIONNAIRE",
                        "questionnaire": {
                          "id": "4970",
                          "title": "Adolescent Facility Service",
                          "saveButtonText": "Save",
                          "resourceType": "Patient",
                          "resourceIdentifier": "@{patientId}"
                        },
                        "params": [
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "bb6e59ef-135d-4178-8e92-422bda1a0f3d",
                            "dataType": "BOOLEAN",
                            "key": "isMarried",
                            "value": "@{isMarried}"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "viewType": "BUTTON",
                    "smallSized": "true",
                    "text": "Women Facility Service",
                    "status": "DUE",
                    "visible": "@{applicableForWomenPackage}",
                    "enabled": "@{patientActive}",
                    "startIcon": {
                      "reference": "ic_women"
                    },
                    "actions": [
                      {
                        "trigger": "ON_CLICK",
                        "workflow": "LAUNCH_QUESTIONNAIRE",
                        "questionnaire": {
                          "id": "4972",
                          "title": "Women Facility Service",
                          "saveButtonText": "Save",
                          "resourceType": "Patient",
                          "resourceIdentifier": "@{patientId}"
                        }
                      }
                    ]
                  },
                  {
                    "viewType": "BUTTON",
                    "smallSized": "true",
                    "text": "Child Facility Service",
                    "status": "DUE",
                    "visible": "@{applicableForChildPackage}",
                    "enabled": "@{patientActive}",
                    "startIcon": {
                      "reference": "ic_kids"
                    },
                    "actions": [
                      {
                        "trigger": "ON_CLICK",
                        "workflow": "LAUNCH_QUESTIONNAIRE",
                        "questionnaire": {
                          "id": "4974",
                          "title": "Child Facility Service",
                          "saveButtonText": "Save",
                          "resourceType": "Patient",
                          "resourceIdentifier": "@{patientId}"
                        }
                      }
                    ]
                  },
                  {
                    "viewType": "BUTTON",
                    "smallSized": "true",
                    "text": "ENC Child Service",
                    "status": "DUE",
                    "visible": "@{applicableForEncPackage}",
                    "enabled": "@{patientActive}",
                    "startIcon": {
                      "reference": "ic_kids"
                    },
                    "actions": [
                      {
                        "trigger": "ON_CLICK",
                        "workflow": "LAUNCH_QUESTIONNAIRE",
                        "questionnaire": {
                          "id": "6487",
                          "title": "ENC Child Service",
                          "saveButtonText": "Save",
                          "resourceType": "Patient",
                          "resourceIdentifier": "@{patientId}"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "completedHistory",
        "viewType": "COLUMN",
        "padding": 16,
        "children": [
          {
            "viewType": "CARD",
            "content": [
              {
                "viewType": "LIST",
                "id": "completedTasksList",
                "resources": [
                  {
                    "id": "completedTasks",
                    "relatedResourceId": "availableTasks",
                    "resourceType": "Task",
                    "conditionalFhirPathExpression": "((Task.status = 'completed') and (Task.code.empty()))"
                  }
                ],
                "emptyList": {
                  "message": "No completed tasks available for this patient at the moment"
                },
                "registerCard": {
                  "rules": [
                    {
                      "name": "taskStatus",
                      "condition": "true",
                      "actions": [
                        "data.put('taskStatus', fhirPath.extractValue(Task, 'Task.status'))"
                      ]
                    },
                    {
                      "name": "taskReasonCode",
                      "condition": "true",
                      "actions": [
                        "data.put('taskReasonCode', fhirPath.extractValue(Task, 'Task.input[0].value.coding.code'))"
                      ]
                    },
                    {
                      "name": "taskReasonDisplay",
                      "condition": "true",
                      "actions": [
                        "data.put('taskReasonDisplay', fhirPath.extractValue(Task, 'Task.input[0].value.coding.display'))"
                      ]
                    },
                    {
                      "name": "taskStatusColorCode",
                      "condition": "true",
                      "actions": [
                        "data.put('taskStatusColorCode', data.get('taskStatus').equals('ready') ? 'DUE' : data.get('taskStatus').equals('failed') || data.get('taskStatus').equals('cancelled') ? 'OVERDUE' : data.get('taskStatus').equals('requested') ? 'UPCOMING' : data.get('taskStatus').equals('completed') ? 'COMPLETED' : 'UPCOMING')"
                      ]
                    },
                    {
                      "name": "taskEndDate",
                      "condition": "true",
                      "actions": [
                        "data.put('taskEndDate', fhirPath.extractValue(Task, 'Task.lastModified'))"
                      ]
                    },
                    {
                      "name": "taskPeriodEndDate",
                      "condition": "true",
                      "priority": 2,
                      "actions": [
                        "data.put('taskPeriodEndDate', service.formatDate(data.get('taskEndDate'), (data.get('taskEndDate').toString().endsWith('Z') ? \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\" : \"yyyy-MM-dd'T'HH:mm:ssZ\"), \"dd MMM yyyy\"))"
                      ]
                    },
                    {
                      "name": "taskDescription",
                      "condition": "true",
                      "actions": [
                        "data.put('taskDescription', fhirPath.extractValue(Task, 'Task.description'))"
                      ]
                    },
                    {
                      "name": "taskDescriptionWithReason",
                      "condition": "true",
                      "priority": 2,
                      "actions": [
                        "data.put('taskDescriptionWithReason', data.get('taskDescription') + ((data.get('taskReasonDisplay') != null && data.get('taskReasonDisplay') != '') ? ('(' + data.get('taskReasonDisplay') + ')') : ''))"
                      ]
                    },
                    {
                      "name": "taskDescriptionWithEndDate",
                      "condition": "true",
                      "priority": 3,
                      "actions": [
                        "data.put('taskDescriptionWithEndDate', data.get('taskDescriptionWithReason') + ' ' + 'completed on' + ' ' + data.get('taskPeriodEndDate'))"
                      ]
                    },
                    {
                      "name": "taskId",
                      "condition": "true",
                      "actions": [
                        "data.put('taskId', fhirPath.extractValue(Task, 'Task.id'))"
                      ]
                    },
                    {
                      "name": "taskFor",
                      "condition": "true",
                      "actions": [
                        "data.put('taskFor', fhirPath.extractValue(Task, 'Task.for.reference'))"
                      ]
                    },
                    {
                      "name": "taskQuestionnaireId",
                      "condition": "true",
                      "actions": [
                        "data.put('taskQuestionnaireId', fhirPath.extractValue(Task, 'Task.reasonReference.reference'))"
                      ]
                    }
                  ],
                  "views": [
                    {
                      "viewType": "BUTTON",
                      "text": "@{taskDescriptionWithEndDate}",
                      "status": "@{taskStatusColorCode}",
                      "visible": "true",
                      "enabled": "@{patientActive}",
                      "actions": [
                        {
                          "trigger": "ON_CLICK",
                          "workflow": "LAUNCH_QUESTIONNAIRE",
                          "questionnaire": {
                            "id": "@{taskQuestionnaireId}",
                            "title": "@{taskDescription}",
                            "saveButtonText": "Save",
                            "taskId": "@{taskId}",
                            "resourceIdentifier": "@{taskFor}"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    ]
  },
  "overFlowMenuItems": [
    {
      "title": "Registration info",
      "titleColor": "@{patientTextColor}",
      "visible": "true",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "4234",
            "title": "Member registration info",
            "saveButtonText": "Update registration",
            "setPractitionerDetails": true,
            "setOrganizationDetails": true,
            "type": "EDIT",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "4242"
            ]
          },
          "params": [
            {
              "key": "familyLogicalId",
              "value": "@{familyLogicalId}",
              "paramType": "UPDATE_DATE_ON_EDIT"
            },
            {
              "paramType": "PREPOPULATE",
              "linkId": "652a752f-280a-4560-aac8-fa3196449961",
              "dataType": "INTEGER",
              "key": "isFamilyHeadExists",
              "value": "@{isFamilyHeadExists}"
            }
          ]
        }
      ]
    },
    {
      "title": "Register Pregnancy",
      "titleColor": "@{patientTextColor}",
      "visible": "@{canRegisterPregnancy}",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "5589",
            "title": "Record to ANC",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "5593"
            ],
            "refreshContent": true,
            "eventWorkflows": [
              {
                "eventType": "RESOURCE_CLOSURE",
                "eventResources": [
                  {
                    "id": "fpConditionToBeClosed",
                    "resource": "Condition",
                    "configRules": [
                      {
                        "name": "patientId",
                        "condition": "true",
                        "actions": [
                          "data.put('patientId', fhirPath.extractValue(Patient, 'Patient.id'))"
                        ]
                      }
                    ],
                    "dataQueries": [
                      {
                        "paramName": "code",
                        "filterCriteria": [
                          {
                            "dataType": "CODEABLECONCEPT",
                            "value": {
                              "system": "http://snomed.info/sct",
                              "code": "99998888"
                            }
                          }
                        ]
                      },
                      {
                        "paramName": "subject",
                        "filterCriteria": [
                          {
                            "dataType": "REFERENCE",
                            "computedRule": "patientId"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "params": [
            {
              "key": "familyLogicalId",
              "value": "@{familyLogicalId}",
              "paramType": "UPDATE_DATE_ON_EDIT"
            },
            {
              "paramType": "PREPOPULATE",
              "linkId": "650dd00d-c60b-4a3d-838a-128aad048277",
              "dataType": "STRING",
              "key": "fpConditionId",
              "value": "@{fpConditionId}"
            }
          ]
        }
      ]
    },
    {
      "title": "Pregnancy Outcome",
      "titleColor": "@{patientTextColor}",
      "visible": "@{canOutcomePregnancy}",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "6056",
            "title": "Pregnancy outcome",
            "resourceIdentifier": "@{patientId}",
            "groupResource": {
              "groupIdentifier": "@{familyLogicalId}",
              "memberResourceType": "Patient"
            },
            "refreshContent": true,
            "eventWorkflows": [
              {
                "eventType": "RESOURCE_CLOSURE",
                "triggerConditions": [
                  {
                    "eventResourceId": "ancCarePlanToBeClosed",
                    "matchAll": false,
                    "conditionalFhirPathExpressions": [
                      "Patient.active and %resource.entry.where(resource is QuestionnaireResponse).resource.descendants().where((linkId='33455692-f8b4-4b90-809a-94352aad1e2f') and ((answer.value.exists()))).exists()"
                    ]
                  },
                  {
                    "eventResourceId": "ancConditionToBeClosed",
                    "matchAll": false,
                    "conditionalFhirPathExpressions": [
                      "Patient.active and %resource.entry.where(resource is QuestionnaireResponse).resource.descendants().where((linkId='33455692-f8b4-4b90-809a-94352aad1e2f') and ((answer.value.exists()))).exists()"
                    ]
                  }
                ],
                "eventResources": [
                  {
                    "id": "ancCarePlanToBeClosed",
                    "resource": "CarePlan",
                    "configRules": [
                      {
                        "name": "patientId",
                        "condition": "true",
                        "actions": [
                          "data.put('patientId', fhirPath.extractValue(Patient, 'Patient.id'))"
                        ]
                      }
                    ],
                    "dataQueries": [
                      {
                        "paramName": "instantiates-canonical",
                        "filterCriteria": [
                          {
                            "dataType": "REFERENCE",
                            "value": "PlanDefinition/5593"
                          }
                        ]
                      },
                      {
                        "paramName": "subject",
                        "filterCriteria": [
                          {
                            "dataType": "REFERENCE",
                            "computedRule": "patientId"
                          }
                        ]
                      }
                    ],
                    "relatedResources": [
                      {
                        "resource": "Task",
                        "searchParameter": "based-on"
                      }
                    ]
                  },
                  {
                    "id": "ancConditionToBeClosed",
                    "resource": "Condition",
                    "configRules": [
                      {
                        "name": "patientId",
                        "condition": "true",
                        "actions": [
                          "data.put('patientId', fhirPath.extractValue(Patient, 'Patient.id'))"
                        ]
                      }
                    ],
                    "dataQueries": [
                      {
                        "paramName": "code",
                        "filterCriteria": [
                          {
                            "dataType": "CODEABLECONCEPT",
                            "value": {
                              "system": "http://snomed.info/sct",
                              "code": "77386006"
                            }
                          }
                        ]
                      },
                      {
                        "paramName": "subject",
                        "filterCriteria": [
                          {
                            "dataType": "REFERENCE",
                            "computedRule": "patientId"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "params": [
            {
              "paramType": "UPDATE_DATE_ON_EDIT",
              "key": "familyLogicalId",
              "value": "@{familyLogicalId}"
            },
            {
              "paramType": "PREPOPULATE",
              "linkId": "650dd00d-c60b-4a3d-838a-128aad048277",
              "dataType": "STRING",
              "key": "ancConditionId",
              "value": "@{ancConditionId}"
            }
          ]
        }
      ]
    }
  ]
}
