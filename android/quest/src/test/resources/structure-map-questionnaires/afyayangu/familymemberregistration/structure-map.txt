map "https://fhir.labs.smartregister.org/fhir/StructureMap/103346" = 'Family Member Registration'

uses "http://hl7.org/fhir/StructureDefinition/QuestionnaireReponse" as source
uses "http://hl7.org/fhir/StructureDefinition/Bundle" as target
uses "http://hl7.org/fhir/StructureDefinition/Patient" as target

group eCBISAddFamilyMemberRegistration(source src : QuestionnaireResponse, target bundle: Bundle) {
    src -> bundle.type = 'collection' "rule_bundle_type";
    src -> bundle.entry as entry, entry.resource = create('Patient') as patient then
        ExtractPatient(src, patient, bundle) "rule_bundle_entries";
}

group ExtractPatient(source src : QuestionnaireResponse, target patient : Patient, target bundle : Bundle){
       src -> patient.id = uuid() "rule_patient_id_generation";

       src -> patient.name = create('HumanName') as patientName then {
           src -> patientName.family = evaluate(src, $this.item.where(linkId = '397d4e72-0990-45ed-866b-fab3dd27f758').answer.value) "rule_patient_family_name";
           src -> patientName.given = evaluate(src, $this.item.where(linkId = '6bb3b09d-6f19-4aba-815c-5e36bea96dbc').answer.value) "rule_patient_given_name";
           src -> patientName.text = evaluate(src, $this.item.where(linkId = 'fd734513-ba6f-4cf2-922f-0d1054e9353c').answer.value) "rule_patient_middle_name";
           src -> patientName.use = 'official' "rule_patient_name_use";
       } "rule_patient_name";

       src -> patient.identifier = create('Identifier') as patientIdentifierNationalId then {
         src -> patientIdentifierNationalId.value = evaluate(src, $this.item.where(linkId = '82fee04f-958c-41bf-8b67-c57eb2fdf3a9').answer.value.code)
         "rule_patient_identifier_national_id_value";
         src -> patientIdentifierNationalId.use = "usual" "rule_patient_identifier_national_id_use";
       } "rule_patient_identifier_national_id";

       src -> patient.identifier = create('Identifier') as patientIdentifierOpenSRPId then {
          src -> patientIdentifierOpenSRPId.value = evaluate(src, $this.item.where(linkId = 'c5f61e5e-61e0-490b-cfad-14c4b9f3723d').answer.value)
          "rule_patient_identifier_opensrp_id_value";
          src -> patientIdentifierOpenSRPId.use = "official" "rule_patient_identifier_opensrp_id_use";
       } "rule_patient_identifier_opensrp";

       src -> patient.identifier = create('Identifier') as patientIdentifier then {
          src -> patientIdentifier.value = uuid() "rule_patient_identifier_value";
          src -> patientIdentifier.use = "secondary" "rule_patient_identifier_use";
       } "rule_patient_identifier";

       src -> patient.gender = evaluate(src, $this.item.where(linkId = 'e5bb0db6-82a0-4200-b421-334da8a916a4').answer.value.code) "rule_patient_gender";

        src.item as patient_dob where(linkId = '6c2d4f74-84d5-49cd-81dd-a53e101a6899') then {
                 patient_dob.answer first as patientBirthDateAnswer then {
                         patientBirthDateAnswer.value as val -> patient.birthDate = val "rule_patient_dob_answer";
                 } "rule__first_patient_dob";
        } "rule_patient_dob";

        src.item as patient_age where(linkId = '5f06debf-721a-457d-8540-65cac95be9a1' and answer.count() > 0) -> patient
               .birthDate = evaluate(patient_age, today() - ($this.answer.value.toString() + 'years').toQuantity())
               "rule_patient_age";

       src -> patient.active = evaluate(src, $this.item.where(linkId = '66e8c2d2-b7df-4c03-bc85-383659b4bed8').answer.value)
       "rule_patient_active";

       src -> patient.telecom = create('ContactPoint') as patientContact then {
           src -> patientContact.value = evaluate(item_tele, $this.item.where(linkId = '7cb06ccc-ad90-4117-df30-fa44a60849af').answer.value) "rule_patient_tel_num";
           src -> patientContact.system = "phone" "rule_patient_tel_sys";
        } "rule_patient_tel";

        src -> patient.telecom = create('ContactPoint') as patientContact then {
            src -> patientContact.value = evaluate(item_tele, $this.item.where(linkId = 'be74f432-ca13-4ac8-db17-455127b4ec1c').answer.value) "rule_patient_tel_num";
            src -> patientContact.system = "phone" "rule_patient_tel_sys";
        } "rule_patient_tel";

       src.item as calculate_new_date_today -> evaluate(src, today() - 15 'years') as new_date then {
           calculate_new_date_today as patient_date_of_birth where(linkId = '6c2d4f74-84d5-49cd-81dd-a53e101a6899' and answer.value.count() > 0) then {
               patient_date_of_birth.answer first as patient_date_of_birth_answer then {
                    patient_date_of_birth_answer.value as patient_date_of_birth_answer_value then {
                        patient_date_of_birth_answer_value as patient_age_compare_with_today where(patient_date_of_birth_answer_value <= new_date) then {
                            src.item as head_of_household_check where(linkId ='1e1a206f-1cc2-4e48-8103-b26bf4bd7c3c' and answer.value.code = 'yes') then {
                                head_of_household_check -> bundle.entry as entry, entry.resource = create('RelatedPerson') as relatedPerson then {
                                    src then ExtractRelatedPerson(patient, relatedPerson) "rule_related_person_reference";
                                } "rule_related_person_creation";
                            } "household_head_trigger_check";
                        } "rule_patient_age_compare_with_today";
                    } "rule_patient_date_of_birth_answer_value";
               } "rule_patient_date_of_birth_answer";
           } "rule_patient_date_of_birth";
       } "rule_calculate_new_date_today";
 }

group ExtractRelatedPerson(source src : Patient, target relatedPerson : RelatedPerson) {
     src -> relatedPerson.id = uuid() "rule_related_person";
     src -> relatedPerson.identifier = create('Identifier') as relatedPersonIdentifier then {
          src -> relatedPersonIdentifier.value = uuid() "rule_related_person_identifier_value";
          src -> relatedPersonIdentifier.use = "secondary" "rule_related_person_identifier_use";
     } "rule_related_person_identifier";
     src -> relatedPerson.name = create('HumanName') as relatedPersonName then {
          src -> relatedPersonName.family = evaluate(src, $this.name.family) "rule_related_person_family_name";
          src -> relatedPersonName.given = evaluate(src,  $this.name.given) "rule_related_person_given_name";
          src -> relatedPersonName.text = evaluate(src,  $this.name.text) "rule_related_person_middle_name";
          src -> relatedPersonName.use = 'official' "rule_related_person_name_use";
     } "rule_related_person_name";
     src -> relatedPerson.active = true "rule_related_person_active";
     src -> relatedPerson.patient = create('Reference') as ref then {
          src -> ref.reference = evaluate(src, 'Patient/' + $this.id) "rule_related_person_patient_ref";
          src -> ref.display = evaluate(src, relatedPerson.name.given + " " + relatedPerson.name.text + " " + relatedPerson.name.family) "rule_related_person_patient_ref_display";
     } "rule_related_person_patient";
}